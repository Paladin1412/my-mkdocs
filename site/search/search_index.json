{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"2020-04-04 pip3 install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material mkdocs-minify-plugin \u6807\u9898 \u00b6 \u6807\u9898\u4e00 \u00b6 Material for MkDocs provides the following template blocks: Block name Wrapped contents analytics Wraps the Google Analytics integration announce Wraps the Announcement bar config Wraps the JavaScript application config content Wraps the main content disqus Wraps the disqus integration extrahead Empty block to define additional meta tags fonts Wraps the webfont definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) scripts Wraps the JavaScript application (footer) source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) tabs Wraps the tabs navigation (if available) \u6807\u9898\u4e8c \u00b6 . \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # 3rd-party integrations \u2502 \u251c\u2500 language/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 hero.html # Hero teaser \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source-date.html # Last updated date \u2502 \u251c\u2500 source-link.html # Link to source file \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 toc-item.html # Table of contents item \u2502 \u2514\u2500 toc.html # Table of contents \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page","title":"About"},{"location":"about/#_1","text":"","title":"\u6807\u9898"},{"location":"about/#_2","text":"Material for MkDocs provides the following template blocks: Block name Wrapped contents analytics Wraps the Google Analytics integration announce Wraps the Announcement bar config Wraps the JavaScript application config content Wraps the main content disqus Wraps the disqus integration extrahead Empty block to define additional meta tags fonts Wraps the webfont definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) scripts Wraps the JavaScript application (footer) source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) tabs Wraps the tabs navigation (if available)","title":"\u6807\u9898\u4e00"},{"location":"about/#_3","text":". \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # 3rd-party integrations \u2502 \u251c\u2500 language/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 hero.html # Hero teaser \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source-date.html # Last updated date \u2502 \u251c\u2500 source-link.html # Link to source file \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 toc-item.html # Table of contents item \u2502 \u2514\u2500 toc.html # Table of contents \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page","title":"\u6807\u9898\u4e8c"},{"location":"kubernetes/1-etcd-deploy/","text":"\u76ee\u5f55 \u00b6 Why Cloud Native Cloud Native \u5386\u53f2 \u4ec0\u4e48\u662f Serverless \u5bf9\u6bd4 Serverful IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd \u4ec0\u4e48\u4e0d\u662f Serverless \u4e00\u4e2a\u4f8b\u5b50 Serverless \u7684\u6280\u672f\u7279\u70b9 Serverless \u7684\u4f18\u52bf Serverless \u7684\u5c40\u9650\u6027 Serverless \u5e94\u7528\u573a\u666f Serverless \u5f00\u6e90\u6846\u67b6 CNCF Serverless WG \u6b63\u6587 \u00b6 Why Cloud Native \u00b6 Break up monolith \u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387 \u8282\u7701\u6210\u672c Abstraction of Infrastructure \u4e2a\u4eba\uff1a\u5f00\u53d1\u8005\u5173\u6ce8 Code \u800c\u975e Infrastructure \u516c\u53f8\uff1a\u66f4\u5feb\u7684\u5f00\u62d3\u5e02\u573a\uff08Money\uff09 Cloud Native \u5386\u53f2 \u00b6 \u56e0\u6b64\uff0c Serverless \u662f\u4e91\u539f\u751f\u6280\u672f\u53d1\u5c55\u7684\u9ad8\u7ea7\u9636\u6bb5\u3002 \u4e0a\u4e00\u5bb6\u5355\u4f4d\u8fd8\u5904\u5728 Data Centre \u9636\u6bb5\uff0c\u800c\u4eca\u6211\u5728\u7814\u7a76 Serverless, \u770b\u6765\u6211\u8fdb\u5316\u4e86\u3002 \u4ec0\u4e48\u662f Serverless \u00b6 \u5f00\u53d1\u8005\u4e0d\u5173\u6ce8\u670d\u52a1\u5668\uff0c\u53ea\u5173\u6ce8\u4ee3\u7801\u53ca\u4e1a\u52a1\u903b\u8f91\u3002 Serverless \u6307\u7684\u662f\u670d\u52a1\u7aef\u903b\u8f91\u7531\u5f00\u53d1\u8005\u5b9e\u73b0\uff0c\u8fd0\u884c\u5728\u65e0\u72b6\u6001\u7684\u8ba1\u7b97\u5bb9\u5668\u4e2d\uff0c\u7531\u4e8b\u4ef6\u89e6\u53d1\uff0c\u5b8c\u5168\u88ab\u7b2c\u4e09\u65b9\u7ba1\u7406\uff0c\u800c\u4e1a\u52a1\u5c42\u9762\u7684\u72b6\u6001\u5219\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u6216\u5b58\u50a8\u8d44\u6e90\u4e2d\u3002 \u5173\u952e\u8bcd\uff1ano server\uff0cstateless\uff0cevent-driven \u5bf9\u6bd4 Serverful \u00b6 \u5f31\u5316\u4e86\u5b58\u50a8\u548c\u8ba1\u7b97\u4e4b\u95f4\u7684\u8054\u7cfb \u4ee3\u7801\u7684\u6267\u884c\u4e0d\u518d\u9700\u8981\u624b\u52a8\u5206\u914d\u8d44\u6e90 \u6309\u4f7f\u7528\u91cf\u8ba1\u8d39 IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd \u00b6 IaaS\uff1aInfrastructure as a Service PaaS\uff1aPlatform as a Service CaaS\uff1aContainer as a Service Faas\uff1a Function as a Service AaaS ... \u4ec0\u4e48\u4e0d\u662f Serverless \u00b6 \u5982\u679c\u4f60\u7684PaaS\u53ef\u4ee5\u5c06\u4ee5\u524d\u534a\u79d2\u542f\u52a8\u7684\u5e94\u7528\u572820ms\u5185\u542f\u52a8\uff0c\u5c31\u53eb\u5b83Serverless\u3002\u2014\u2014Adrian Cockcroft \u5927\u90e8\u5206 PaaS \u5e94\u7528\u4e0d\u4f1a\u4e3a\u4e86\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u542f\u52a8\u5e76\u7ed3\u675f\u6574\u4e2a\u5e94\u7528\uff0c\u800c this is what FaaS does\u3002 Serverless \u2260 FaaS \u00b6 \u4ece\u5916\u5ef6\u6765\u770b\uff0cServerless \u6bd4 FaaS \u7684\u5916\u5ef6\u8981\u5e7f\uff0cFaaS \u4e3b\u8981\u89e3\u51b3\u7684\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u903b\u8f91\u5982\u4f55\u505a\u5230 Serverless\uff0c\u53ef\u4ee5\u53eb\u505a Serverless Compute\u3002 \u6709\u5f20\u8001\u56fe\u627e\u4e0d\u5230\u4e86\uff0c\u4e0b\u8fb9\u627e\u4e86\u4e00\u5f20 Spring Serverless \u5b98\u7f51\u4ecb\u7ecd\u9875\u7684\u56fe\u4ee3\u66ff\uff0c\u610f\u601d\u5dee\u4e0d\u591a\u3002 \u76ee\u524d\u4e1a\u754c\u7684\u5404\u7c7b Serverless \u5b9e\u73b0\u6309\u529f\u80fd\u800c\u8a00\uff0c\u4e3b\u8981\u4e3a\u5e94\u7528\u670d\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u9762\u7684\u652f\u6301\uff1a\u51fd\u6570\u5373\u670d\u52a1\uff08Function as a Service\uff0cFaaS\uff09\u4ee5\u53ca\u540e\u53f0\u5373\u670d\u52a1\uff08Backend as a Service\uff0cBaaS\uff09\u3002 FaaS : FaaS \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5e73\u53f0\uff0c\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\uff0c\u5e94\u7528\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7684\u5f62\u5f0f\u5f00\u53d1\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u3002 Faas \u7684\u4e3b\u8981\u6982\u5ff5\u662f\uff0c\u5c06\u4f7f\u7528\u4e91\u670d\u52a1\u7684\u8fc7\u7a0b\u53d8\u5f97\u548c\u4f20\u7edf\u7f16\u7a0b\u4e00\u6837\uff1a\u4e00\u4e2a\u5e94\u7528\u7531\u5f88\u591a\u4e2a\u51fd\u6570\u7ec4\u6210\uff0c\u6bcf\u4e2a\u51fd\u6570\u6709\u8f93\u5165\u8f93\u51fa\uff0c\u5728\u51fd\u6570\u5185\u5b8c\u6210\u5fc5\u8981\u7684\u903b\u8f91\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u7f16\u5199\u597d\u51fd\u6570\u4ee3\u7801\uff0c\u5c06\u4ee3\u7801\u6ce8\u518c\u5230\u4e91\u7aef\uff0c\u5c06\u8fd9\u4e9b\u51fd\u6570\u7ec4\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u5373\u53ef\u3002 BaaS : \u901a\u8fc7 BaaS \u5e73\u53f0\u5c06\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5982\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u53ca\u5b58\u50a8\u7b49\u670d\u52a1\u5316\u5e76\u53d1\u5e03\u51fa\u6765\uff0c\u7528\u6237\u901a\u8fc7\u5411 BaaS \u5e73\u53f0\u7533\u8bf7\u6240\u9700\u8981\u7684\u670d\u52a1\u8fdb\u884c\u6d88\u8d39\uff0c\u800c\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u670d\u52a1\u7684\u5177\u4f53\u8fd0\u7ef4\u3002 \u4e00\u4e2a\u4f8b\u5b50 \u00b6 \u4e00\u4e2a\u4f20\u7edf\u7684\u4e09\u5c42 C/S \u67b6\u6784 \u6539\u9020\u6210 Serverless \u67b6\u6784 1. \u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684 BaaS \u670d\u52a1\uff0c\u8eab\u4efd\u9a8c\u8bc1\u903b\u8f91 2. \u53e6\u4e00\u4e2a BaaS \u793a\u4f8b\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u4e00\u90e8\u5206\u6570\u636e\u5e93\u5185\u5bb9 3. \u5148\u524d\u670d\u52a1\u5668\u7aef\u7684\u90e8\u5206\u903b\u8f91\u5df2\u7ecf\u8f6c\u79fb\u5230\u4e86\u5ba2\u6237\u7aef 4. \u670d\u52a1\u7aef\uff0c\u641c\u7d22\u529f\u80fd\u53ef\u4ee5\u4ece\u6301\u7eed\u8fd0\u884c\u7684\u670d\u52a1\u7aef\u4e2d\u62c6\u5206\u51fa\u6765\uff0c\u4ee5 FaaS \u7684\u65b9\u5f0f\u5b9e\u73b0 5. \u670d\u52a1\u7aef\uff0c\u8d2d\u4e70\u529f\u80fd\u6539\u5199\u4e3a\u53e6\u4e00\u4e2a FaaS \u51fd\u6570 Serverless \u7684\u6280\u672f\u7279\u70b9 \u00b6 \u6309\u9700\u52a0\u8f7d \u4e8b\u4ef6\u9a71\u52a8 \u72b6\u6001\u975e\u672c\u5730\u6301\u4e45\u5316 \u975e\u4f1a\u8bdd\u4fdd\u6301 \u81ea\u52a8\u5f39\u6027\u4f38\u7f29 \u5e94\u7528\u51fd\u6570\u5316 Serverless \u7684\u4f18\u52bf \u00b6 \u63d0\u5347\u4eba\u529b\u6210\u672c \u964d\u4f4e\u98ce\u9669 \u51cf\u5c11\u8d44\u6e90\u5f00\u9500 \u589e\u52a0\u7f29\u653e\u7684\u7075\u6d3b\u6027 \u7f29\u77ed\u521b\u65b0\u5468\u671f Serverless \u7684\u5c40\u9650\u6027 \u00b6 \u72b6\u6001\u7ba1\u7406 \u51b7\u542f\u52a8\u5ef6\u8fdf \u672c\u5730\u6d4b\u8bd5 Serverless \u5e94\u7528\u573a\u666f \u00b6 Serverless \u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u51b3\u5b9a\uff0c\u9002\u5408\u4ee5\u4e0b\u573a\u666f\uff1a \u5f02\u6b65\u7684\u5e76\u53d1\uff0c\u7ec4\u4ef6\u53ef\u72ec\u7acb\u90e8\u7f72\u548c\u6269\u5c55 \u5e94\u5bf9\u7a81\u53d1\u6216\u670d\u52a1\u4f7f\u7528\u91cf\u4e0d\u53ef\u9884\u6d4b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u8282\u7ea6\u6210\u672c\uff0c\u56e0\u4e3a Serverless \u5e94\u7528\u5728\u4e0d\u8fd0\u884c\u65f6\u4e0d\u6536\u8d39\uff09 \u77ed\u6682\u3001\u65e0\u72b6\u6001\u7684\u5e94\u7528\uff0c\u5bf9\u51b7\u542f\u52a8\u65f6\u95f4\u4e0d\u654f\u611f \u9700\u8981\u5feb\u901f\u5f00\u53d1\u8fed\u4ee3\u7684\u4e1a\u52a1\uff08\u56e0\u4e3a\u65e0\u9700\u63d0\u524d\u7533\u8bf7\u8d44\u6e90\uff0c\u56e0\u6b64\u53ef\u4ee5\u52a0\u5feb\u4e1a\u52a1\u4e0a\u7ebf\u901f\u5ea6\uff09 \u793a\u4f8b\uff1a ETL \u673a\u5668\u5b66\u4e60\u53ca AI \u6a21\u578b\u5904\u7406 \u56fe\u7247\u5904\u7406 IoT \u4f20\u611f\u5668\u6570\u636e\u5206\u6790 \u6d41\u5904\u7406 \u804a\u5929\u673a\u5668\u4eba Serverless \u5f00\u6e90\u6846\u67b6 \u00b6 OpenFaas: \u6210\u719f\u6613\u7528\uff0c\u6838\u5fc3\u9879\u76ee\u4e0d\u591f\u6d3b\u8dc3\uff1b Knative: \u8d77\u6b65\u8f83\u665a\uff0cGoogle & IBM \u5927\u5382\u652f\u6301, \u65b0\u9c9c\uff0c\u771f\u9999\u3002 CNCF Serverless WG \u00b6 CloudEvents \u89c4\u8303 \uff1a\u5b9a\u4e49\u6700\u5c0f\u5316\u7684\u4e8b\u4ef6\u901a\u7528\u5c5e\u6027\u3002 Workflow \u89c4\u8303 \uff1a\u51fd\u6570\u7f16\u6392\u3002 Whitepaper","title":"Etcd"},{"location":"kubernetes/1-etcd-deploy/#_1","text":"Why Cloud Native Cloud Native \u5386\u53f2 \u4ec0\u4e48\u662f Serverless \u5bf9\u6bd4 Serverful IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd \u4ec0\u4e48\u4e0d\u662f Serverless \u4e00\u4e2a\u4f8b\u5b50 Serverless \u7684\u6280\u672f\u7279\u70b9 Serverless \u7684\u4f18\u52bf Serverless \u7684\u5c40\u9650\u6027 Serverless \u5e94\u7528\u573a\u666f Serverless \u5f00\u6e90\u6846\u67b6 CNCF Serverless WG","title":"\u76ee\u5f55"},{"location":"kubernetes/1-etcd-deploy/#_2","text":"","title":"\u6b63\u6587"},{"location":"kubernetes/1-etcd-deploy/#why-cloud-native","text":"Break up monolith \u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387 \u8282\u7701\u6210\u672c Abstraction of Infrastructure \u4e2a\u4eba\uff1a\u5f00\u53d1\u8005\u5173\u6ce8 Code \u800c\u975e Infrastructure \u516c\u53f8\uff1a\u66f4\u5feb\u7684\u5f00\u62d3\u5e02\u573a\uff08Money\uff09","title":"Why Cloud Native"},{"location":"kubernetes/1-etcd-deploy/#cloud-native","text":"\u56e0\u6b64\uff0c Serverless \u662f\u4e91\u539f\u751f\u6280\u672f\u53d1\u5c55\u7684\u9ad8\u7ea7\u9636\u6bb5\u3002 \u4e0a\u4e00\u5bb6\u5355\u4f4d\u8fd8\u5904\u5728 Data Centre \u9636\u6bb5\uff0c\u800c\u4eca\u6211\u5728\u7814\u7a76 Serverless, \u770b\u6765\u6211\u8fdb\u5316\u4e86\u3002","title":"Cloud Native \u5386\u53f2"},{"location":"kubernetes/1-etcd-deploy/#serverless","text":"\u5f00\u53d1\u8005\u4e0d\u5173\u6ce8\u670d\u52a1\u5668\uff0c\u53ea\u5173\u6ce8\u4ee3\u7801\u53ca\u4e1a\u52a1\u903b\u8f91\u3002 Serverless \u6307\u7684\u662f\u670d\u52a1\u7aef\u903b\u8f91\u7531\u5f00\u53d1\u8005\u5b9e\u73b0\uff0c\u8fd0\u884c\u5728\u65e0\u72b6\u6001\u7684\u8ba1\u7b97\u5bb9\u5668\u4e2d\uff0c\u7531\u4e8b\u4ef6\u89e6\u53d1\uff0c\u5b8c\u5168\u88ab\u7b2c\u4e09\u65b9\u7ba1\u7406\uff0c\u800c\u4e1a\u52a1\u5c42\u9762\u7684\u72b6\u6001\u5219\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u6216\u5b58\u50a8\u8d44\u6e90\u4e2d\u3002 \u5173\u952e\u8bcd\uff1ano server\uff0cstateless\uff0cevent-driven","title":"\u4ec0\u4e48\u662f Serverless"},{"location":"kubernetes/1-etcd-deploy/#serverful","text":"\u5f31\u5316\u4e86\u5b58\u50a8\u548c\u8ba1\u7b97\u4e4b\u95f4\u7684\u8054\u7cfb \u4ee3\u7801\u7684\u6267\u884c\u4e0d\u518d\u9700\u8981\u624b\u52a8\u5206\u914d\u8d44\u6e90 \u6309\u4f7f\u7528\u91cf\u8ba1\u8d39","title":"\u5bf9\u6bd4 Serverful"},{"location":"kubernetes/1-etcd-deploy/#iaaspaascaasfaas","text":"IaaS\uff1aInfrastructure as a Service PaaS\uff1aPlatform as a Service CaaS\uff1aContainer as a Service Faas\uff1a Function as a Service AaaS ...","title":"IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd"},{"location":"kubernetes/1-etcd-deploy/#serverless_1","text":"\u5982\u679c\u4f60\u7684PaaS\u53ef\u4ee5\u5c06\u4ee5\u524d\u534a\u79d2\u542f\u52a8\u7684\u5e94\u7528\u572820ms\u5185\u542f\u52a8\uff0c\u5c31\u53eb\u5b83Serverless\u3002\u2014\u2014Adrian Cockcroft \u5927\u90e8\u5206 PaaS \u5e94\u7528\u4e0d\u4f1a\u4e3a\u4e86\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u542f\u52a8\u5e76\u7ed3\u675f\u6574\u4e2a\u5e94\u7528\uff0c\u800c this is what FaaS does\u3002","title":"\u4ec0\u4e48\u4e0d\u662f Serverless"},{"location":"kubernetes/1-etcd-deploy/#serverless-faas","text":"\u4ece\u5916\u5ef6\u6765\u770b\uff0cServerless \u6bd4 FaaS \u7684\u5916\u5ef6\u8981\u5e7f\uff0cFaaS \u4e3b\u8981\u89e3\u51b3\u7684\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u903b\u8f91\u5982\u4f55\u505a\u5230 Serverless\uff0c\u53ef\u4ee5\u53eb\u505a Serverless Compute\u3002 \u6709\u5f20\u8001\u56fe\u627e\u4e0d\u5230\u4e86\uff0c\u4e0b\u8fb9\u627e\u4e86\u4e00\u5f20 Spring Serverless \u5b98\u7f51\u4ecb\u7ecd\u9875\u7684\u56fe\u4ee3\u66ff\uff0c\u610f\u601d\u5dee\u4e0d\u591a\u3002 \u76ee\u524d\u4e1a\u754c\u7684\u5404\u7c7b Serverless \u5b9e\u73b0\u6309\u529f\u80fd\u800c\u8a00\uff0c\u4e3b\u8981\u4e3a\u5e94\u7528\u670d\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u9762\u7684\u652f\u6301\uff1a\u51fd\u6570\u5373\u670d\u52a1\uff08Function as a Service\uff0cFaaS\uff09\u4ee5\u53ca\u540e\u53f0\u5373\u670d\u52a1\uff08Backend as a Service\uff0cBaaS\uff09\u3002 FaaS : FaaS \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5e73\u53f0\uff0c\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\uff0c\u5e94\u7528\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7684\u5f62\u5f0f\u5f00\u53d1\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u3002 Faas \u7684\u4e3b\u8981\u6982\u5ff5\u662f\uff0c\u5c06\u4f7f\u7528\u4e91\u670d\u52a1\u7684\u8fc7\u7a0b\u53d8\u5f97\u548c\u4f20\u7edf\u7f16\u7a0b\u4e00\u6837\uff1a\u4e00\u4e2a\u5e94\u7528\u7531\u5f88\u591a\u4e2a\u51fd\u6570\u7ec4\u6210\uff0c\u6bcf\u4e2a\u51fd\u6570\u6709\u8f93\u5165\u8f93\u51fa\uff0c\u5728\u51fd\u6570\u5185\u5b8c\u6210\u5fc5\u8981\u7684\u903b\u8f91\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u7f16\u5199\u597d\u51fd\u6570\u4ee3\u7801\uff0c\u5c06\u4ee3\u7801\u6ce8\u518c\u5230\u4e91\u7aef\uff0c\u5c06\u8fd9\u4e9b\u51fd\u6570\u7ec4\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u5373\u53ef\u3002 BaaS : \u901a\u8fc7 BaaS \u5e73\u53f0\u5c06\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5982\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u53ca\u5b58\u50a8\u7b49\u670d\u52a1\u5316\u5e76\u53d1\u5e03\u51fa\u6765\uff0c\u7528\u6237\u901a\u8fc7\u5411 BaaS \u5e73\u53f0\u7533\u8bf7\u6240\u9700\u8981\u7684\u670d\u52a1\u8fdb\u884c\u6d88\u8d39\uff0c\u800c\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u670d\u52a1\u7684\u5177\u4f53\u8fd0\u7ef4\u3002","title":"Serverless \u2260 FaaS"},{"location":"kubernetes/1-etcd-deploy/#_3","text":"\u4e00\u4e2a\u4f20\u7edf\u7684\u4e09\u5c42 C/S \u67b6\u6784 \u6539\u9020\u6210 Serverless \u67b6\u6784 1. \u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684 BaaS \u670d\u52a1\uff0c\u8eab\u4efd\u9a8c\u8bc1\u903b\u8f91 2. \u53e6\u4e00\u4e2a BaaS \u793a\u4f8b\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u4e00\u90e8\u5206\u6570\u636e\u5e93\u5185\u5bb9 3. \u5148\u524d\u670d\u52a1\u5668\u7aef\u7684\u90e8\u5206\u903b\u8f91\u5df2\u7ecf\u8f6c\u79fb\u5230\u4e86\u5ba2\u6237\u7aef 4. \u670d\u52a1\u7aef\uff0c\u641c\u7d22\u529f\u80fd\u53ef\u4ee5\u4ece\u6301\u7eed\u8fd0\u884c\u7684\u670d\u52a1\u7aef\u4e2d\u62c6\u5206\u51fa\u6765\uff0c\u4ee5 FaaS \u7684\u65b9\u5f0f\u5b9e\u73b0 5. \u670d\u52a1\u7aef\uff0c\u8d2d\u4e70\u529f\u80fd\u6539\u5199\u4e3a\u53e6\u4e00\u4e2a FaaS \u51fd\u6570","title":"\u4e00\u4e2a\u4f8b\u5b50"},{"location":"kubernetes/1-etcd-deploy/#serverless_2","text":"\u6309\u9700\u52a0\u8f7d \u4e8b\u4ef6\u9a71\u52a8 \u72b6\u6001\u975e\u672c\u5730\u6301\u4e45\u5316 \u975e\u4f1a\u8bdd\u4fdd\u6301 \u81ea\u52a8\u5f39\u6027\u4f38\u7f29 \u5e94\u7528\u51fd\u6570\u5316","title":"Serverless \u7684\u6280\u672f\u7279\u70b9"},{"location":"kubernetes/1-etcd-deploy/#serverless_3","text":"\u63d0\u5347\u4eba\u529b\u6210\u672c \u964d\u4f4e\u98ce\u9669 \u51cf\u5c11\u8d44\u6e90\u5f00\u9500 \u589e\u52a0\u7f29\u653e\u7684\u7075\u6d3b\u6027 \u7f29\u77ed\u521b\u65b0\u5468\u671f","title":"Serverless \u7684\u4f18\u52bf"},{"location":"kubernetes/1-etcd-deploy/#serverless_4","text":"\u72b6\u6001\u7ba1\u7406 \u51b7\u542f\u52a8\u5ef6\u8fdf \u672c\u5730\u6d4b\u8bd5","title":"Serverless \u7684\u5c40\u9650\u6027"},{"location":"kubernetes/1-etcd-deploy/#serverless_5","text":"Serverless \u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u51b3\u5b9a\uff0c\u9002\u5408\u4ee5\u4e0b\u573a\u666f\uff1a \u5f02\u6b65\u7684\u5e76\u53d1\uff0c\u7ec4\u4ef6\u53ef\u72ec\u7acb\u90e8\u7f72\u548c\u6269\u5c55 \u5e94\u5bf9\u7a81\u53d1\u6216\u670d\u52a1\u4f7f\u7528\u91cf\u4e0d\u53ef\u9884\u6d4b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u8282\u7ea6\u6210\u672c\uff0c\u56e0\u4e3a Serverless \u5e94\u7528\u5728\u4e0d\u8fd0\u884c\u65f6\u4e0d\u6536\u8d39\uff09 \u77ed\u6682\u3001\u65e0\u72b6\u6001\u7684\u5e94\u7528\uff0c\u5bf9\u51b7\u542f\u52a8\u65f6\u95f4\u4e0d\u654f\u611f \u9700\u8981\u5feb\u901f\u5f00\u53d1\u8fed\u4ee3\u7684\u4e1a\u52a1\uff08\u56e0\u4e3a\u65e0\u9700\u63d0\u524d\u7533\u8bf7\u8d44\u6e90\uff0c\u56e0\u6b64\u53ef\u4ee5\u52a0\u5feb\u4e1a\u52a1\u4e0a\u7ebf\u901f\u5ea6\uff09 \u793a\u4f8b\uff1a ETL \u673a\u5668\u5b66\u4e60\u53ca AI \u6a21\u578b\u5904\u7406 \u56fe\u7247\u5904\u7406 IoT \u4f20\u611f\u5668\u6570\u636e\u5206\u6790 \u6d41\u5904\u7406 \u804a\u5929\u673a\u5668\u4eba","title":"Serverless \u5e94\u7528\u573a\u666f"},{"location":"kubernetes/1-etcd-deploy/#serverless_6","text":"OpenFaas: \u6210\u719f\u6613\u7528\uff0c\u6838\u5fc3\u9879\u76ee\u4e0d\u591f\u6d3b\u8dc3\uff1b Knative: \u8d77\u6b65\u8f83\u665a\uff0cGoogle & IBM \u5927\u5382\u652f\u6301, \u65b0\u9c9c\uff0c\u771f\u9999\u3002","title":"Serverless \u5f00\u6e90\u6846\u67b6"},{"location":"kubernetes/1-etcd-deploy/#cncf-serverless-wg","text":"CloudEvents \u89c4\u8303 \uff1a\u5b9a\u4e49\u6700\u5c0f\u5316\u7684\u4e8b\u4ef6\u901a\u7528\u5c5e\u6027\u3002 Workflow \u89c4\u8303 \uff1a\u51fd\u6570\u7f16\u6392\u3002 Whitepaper","title":"CNCF Serverless WG"},{"location":"kubernetes/2-serverless/","text":"Upgrading to 4.x \u00b6 Highlights \u00b6 Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material for MkDocs with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to the issue in which the problem was discovered and fixed. How to upgrade \u00b6 Changes to mkdocs.yml \u00b6 None. Changes to *.html files \u00b6 None.","title":"Serverless"},{"location":"kubernetes/2-serverless/#upgrading-to-4x","text":"","title":"Upgrading to 4.x"},{"location":"kubernetes/2-serverless/#highlights","text":"Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material for MkDocs with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to the issue in which the problem was discovered and fixed.","title":"Highlights"},{"location":"kubernetes/2-serverless/#how-to-upgrade","text":"","title":"How to upgrade"},{"location":"kubernetes/2-serverless/#changes-to-mkdocsyml","text":"None.","title":"Changes to mkdocs.yml"},{"location":"kubernetes/2-serverless/#changes-to-html-files","text":"None.","title":"Changes to *.html files"},{"location":"learning%20notes/1-design-pattern/","text":"","title":"Design Pattern"},{"location":"serverless/concept/","text":"\u76ee\u5f55 \u00b6 Why Cloud Native Cloud Native \u5386\u53f2 \u4ec0\u4e48\u662f Serverless \u5bf9\u6bd4 Serverful IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd \u4ec0\u4e48\u4e0d\u662f Serverless \u4e00\u4e2a\u4f8b\u5b50 Serverless \u7684\u6280\u672f\u7279\u70b9 Serverless \u7684\u4f18\u52bf Serverless \u7684\u5c40\u9650\u6027 Serverless \u5e94\u7528\u573a\u666f Serverless \u5f00\u6e90\u6846\u67b6 CNCF Serverless WG \u6b63\u6587 \u00b6 Why Cloud Native \u00b6 Break up monolith \u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387 \u8282\u7701\u6210\u672c Abstraction of Infrastructure \u4e2a\u4eba\uff1a\u5f00\u53d1\u8005\u5173\u6ce8 Code \u800c\u975e Infrastructure \u516c\u53f8\uff1a\u66f4\u5feb\u7684\u5f00\u62d3\u5e02\u573a\uff08Money\uff09 Cloud Native \u5386\u53f2 \u00b6 \u56e0\u6b64\uff0c Serverless \u662f\u4e91\u539f\u751f\u6280\u672f\u53d1\u5c55\u7684\u9ad8\u7ea7\u9636\u6bb5\u3002 \u4e0a\u4e00\u5bb6\u5355\u4f4d\u8fd8\u5904\u5728 Data Centre \u9636\u6bb5\uff0c\u800c\u4eca\u6211\u5728\u7814\u7a76 Serverless, \u770b\u6765\u6211\u8fdb\u5316\u4e86\u3002 \u4ec0\u4e48\u662f Serverless \u00b6 \u5f00\u53d1\u8005\u4e0d\u5173\u6ce8\u670d\u52a1\u5668\uff0c\u53ea\u5173\u6ce8\u4ee3\u7801\u53ca\u4e1a\u52a1\u903b\u8f91\u3002 Serverless \u6307\u7684\u662f\u670d\u52a1\u7aef\u903b\u8f91\u7531\u5f00\u53d1\u8005\u5b9e\u73b0\uff0c\u8fd0\u884c\u5728\u65e0\u72b6\u6001\u7684\u8ba1\u7b97\u5bb9\u5668\u4e2d\uff0c\u7531\u4e8b\u4ef6\u89e6\u53d1\uff0c\u5b8c\u5168\u88ab\u7b2c\u4e09\u65b9\u7ba1\u7406\uff0c\u800c\u4e1a\u52a1\u5c42\u9762\u7684\u72b6\u6001\u5219\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u6216\u5b58\u50a8\u8d44\u6e90\u4e2d\u3002 \u5173\u952e\u8bcd\uff1ano server\uff0cstateless\uff0cevent-driven \u5bf9\u6bd4 Serverful \u00b6 \u5f31\u5316\u4e86\u5b58\u50a8\u548c\u8ba1\u7b97\u4e4b\u95f4\u7684\u8054\u7cfb \u4ee3\u7801\u7684\u6267\u884c\u4e0d\u518d\u9700\u8981\u624b\u52a8\u5206\u914d\u8d44\u6e90 \u6309\u4f7f\u7528\u91cf\u8ba1\u8d39 IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd \u00b6 IaaS\uff1aInfrastructure as a Service PaaS\uff1aPlatform as a Service CaaS\uff1aContainer as a Service Faas\uff1a Function as a Service AaaS ... \u4ec0\u4e48\u4e0d\u662f Serverless \u00b6 \u5982\u679c\u4f60\u7684PaaS\u53ef\u4ee5\u5c06\u4ee5\u524d\u534a\u79d2\u542f\u52a8\u7684\u5e94\u7528\u572820ms\u5185\u542f\u52a8\uff0c\u5c31\u53eb\u5b83Serverless\u3002\u2014\u2014Adrian Cockcroft \u5927\u90e8\u5206 PaaS \u5e94\u7528\u4e0d\u4f1a\u4e3a\u4e86\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u542f\u52a8\u5e76\u7ed3\u675f\u6574\u4e2a\u5e94\u7528\uff0c\u800c this is what FaaS does\u3002 Serverless \u2260 FaaS \u00b6 \u4ece\u5916\u5ef6\u6765\u770b\uff0cServerless \u6bd4 FaaS \u7684\u5916\u5ef6\u8981\u5e7f\uff0cFaaS \u4e3b\u8981\u89e3\u51b3\u7684\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u903b\u8f91\u5982\u4f55\u505a\u5230 Serverless\uff0c\u53ef\u4ee5\u53eb\u505a Serverless Compute\u3002 \u6709\u5f20\u8001\u56fe\u627e\u4e0d\u5230\u4e86\uff0c\u4e0b\u8fb9\u627e\u4e86\u4e00\u5f20 Spring Serverless \u5b98\u7f51\u4ecb\u7ecd\u9875\u7684\u56fe\u4ee3\u66ff\uff0c\u610f\u601d\u5dee\u4e0d\u591a\u3002 \u76ee\u524d\u4e1a\u754c\u7684\u5404\u7c7b Serverless \u5b9e\u73b0\u6309\u529f\u80fd\u800c\u8a00\uff0c\u4e3b\u8981\u4e3a\u5e94\u7528\u670d\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u9762\u7684\u652f\u6301\uff1a\u51fd\u6570\u5373\u670d\u52a1\uff08Function as a Service\uff0cFaaS\uff09\u4ee5\u53ca\u540e\u53f0\u5373\u670d\u52a1\uff08Backend as a Service\uff0cBaaS\uff09\u3002 FaaS : FaaS \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5e73\u53f0\uff0c\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\uff0c\u5e94\u7528\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7684\u5f62\u5f0f\u5f00\u53d1\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u3002 Faas \u7684\u4e3b\u8981\u6982\u5ff5\u662f\uff0c\u5c06\u4f7f\u7528\u4e91\u670d\u52a1\u7684\u8fc7\u7a0b\u53d8\u5f97\u548c\u4f20\u7edf\u7f16\u7a0b\u4e00\u6837\uff1a\u4e00\u4e2a\u5e94\u7528\u7531\u5f88\u591a\u4e2a\u51fd\u6570\u7ec4\u6210\uff0c\u6bcf\u4e2a\u51fd\u6570\u6709\u8f93\u5165\u8f93\u51fa\uff0c\u5728\u51fd\u6570\u5185\u5b8c\u6210\u5fc5\u8981\u7684\u903b\u8f91\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u7f16\u5199\u597d\u51fd\u6570\u4ee3\u7801\uff0c\u5c06\u4ee3\u7801\u6ce8\u518c\u5230\u4e91\u7aef\uff0c\u5c06\u8fd9\u4e9b\u51fd\u6570\u7ec4\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u5373\u53ef\u3002 BaaS : \u901a\u8fc7 BaaS \u5e73\u53f0\u5c06\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5982\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u53ca\u5b58\u50a8\u7b49\u670d\u52a1\u5316\u5e76\u53d1\u5e03\u51fa\u6765\uff0c\u7528\u6237\u901a\u8fc7\u5411 BaaS \u5e73\u53f0\u7533\u8bf7\u6240\u9700\u8981\u7684\u670d\u52a1\u8fdb\u884c\u6d88\u8d39\uff0c\u800c\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u670d\u52a1\u7684\u5177\u4f53\u8fd0\u7ef4\u3002 \u4e00\u4e2a\u4f8b\u5b50 \u00b6 \u4e00\u4e2a\u4f20\u7edf\u7684\u4e09\u5c42 C/S \u67b6\u6784 \u6539\u9020\u6210 Serverless \u67b6\u6784 1. \u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684 BaaS \u670d\u52a1\uff0c\u8eab\u4efd\u9a8c\u8bc1\u903b\u8f91 2. \u53e6\u4e00\u4e2a BaaS \u793a\u4f8b\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u4e00\u90e8\u5206\u6570\u636e\u5e93\u5185\u5bb9 3. \u5148\u524d\u670d\u52a1\u5668\u7aef\u7684\u90e8\u5206\u903b\u8f91\u5df2\u7ecf\u8f6c\u79fb\u5230\u4e86\u5ba2\u6237\u7aef 4. \u670d\u52a1\u7aef\uff0c\u641c\u7d22\u529f\u80fd\u53ef\u4ee5\u4ece\u6301\u7eed\u8fd0\u884c\u7684\u670d\u52a1\u7aef\u4e2d\u62c6\u5206\u51fa\u6765\uff0c\u4ee5 FaaS \u7684\u65b9\u5f0f\u5b9e\u73b0 5. \u670d\u52a1\u7aef\uff0c\u8d2d\u4e70\u529f\u80fd\u6539\u5199\u4e3a\u53e6\u4e00\u4e2a FaaS \u51fd\u6570 Serverless \u7684\u6280\u672f\u7279\u70b9 \u00b6 \u6309\u9700\u52a0\u8f7d \u4e8b\u4ef6\u9a71\u52a8 \u72b6\u6001\u975e\u672c\u5730\u6301\u4e45\u5316 \u975e\u4f1a\u8bdd\u4fdd\u6301 \u81ea\u52a8\u5f39\u6027\u4f38\u7f29 \u5e94\u7528\u51fd\u6570\u5316 Serverless \u7684\u4f18\u52bf \u00b6 \u63d0\u5347\u4eba\u529b\u6210\u672c \u964d\u4f4e\u98ce\u9669 \u51cf\u5c11\u8d44\u6e90\u5f00\u9500 \u589e\u52a0\u7f29\u653e\u7684\u7075\u6d3b\u6027 \u7f29\u77ed\u521b\u65b0\u5468\u671f Serverless \u7684\u5c40\u9650\u6027 \u00b6 \u72b6\u6001\u7ba1\u7406 \u51b7\u542f\u52a8\u5ef6\u8fdf \u672c\u5730\u6d4b\u8bd5 Serverless \u5e94\u7528\u573a\u666f \u00b6 Serverless \u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u51b3\u5b9a\uff0c\u9002\u5408\u4ee5\u4e0b\u573a\u666f\uff1a \u5f02\u6b65\u7684\u5e76\u53d1\uff0c\u7ec4\u4ef6\u53ef\u72ec\u7acb\u90e8\u7f72\u548c\u6269\u5c55 \u5e94\u5bf9\u7a81\u53d1\u6216\u670d\u52a1\u4f7f\u7528\u91cf\u4e0d\u53ef\u9884\u6d4b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u8282\u7ea6\u6210\u672c\uff0c\u56e0\u4e3a Serverless \u5e94\u7528\u5728\u4e0d\u8fd0\u884c\u65f6\u4e0d\u6536\u8d39\uff09 \u77ed\u6682\u3001\u65e0\u72b6\u6001\u7684\u5e94\u7528\uff0c\u5bf9\u51b7\u542f\u52a8\u65f6\u95f4\u4e0d\u654f\u611f \u9700\u8981\u5feb\u901f\u5f00\u53d1\u8fed\u4ee3\u7684\u4e1a\u52a1\uff08\u56e0\u4e3a\u65e0\u9700\u63d0\u524d\u7533\u8bf7\u8d44\u6e90\uff0c\u56e0\u6b64\u53ef\u4ee5\u52a0\u5feb\u4e1a\u52a1\u4e0a\u7ebf\u901f\u5ea6\uff09 \u793a\u4f8b\uff1a ETL \u673a\u5668\u5b66\u4e60\u53ca AI \u6a21\u578b\u5904\u7406 \u56fe\u7247\u5904\u7406 IoT \u4f20\u611f\u5668\u6570\u636e\u5206\u6790 \u6d41\u5904\u7406 \u804a\u5929\u673a\u5668\u4eba Serverless \u5f00\u6e90\u6846\u67b6 \u00b6 OpenFaas: \u6210\u719f\u6613\u7528\uff0c\u6838\u5fc3\u9879\u76ee\u4e0d\u591f\u6d3b\u8dc3\uff1b Knative: \u8d77\u6b65\u8f83\u665a\uff0cGoogle & IBM \u5927\u5382\u652f\u6301, \u65b0\u9c9c\uff0c\u771f\u9999\u3002 CNCF Serverless WG \u00b6 CloudEvents \u89c4\u8303 \uff1a\u5b9a\u4e49\u6700\u5c0f\u5316\u7684\u4e8b\u4ef6\u901a\u7528\u5c5e\u6027\u3002 Workflow \u89c4\u8303 \uff1a\u51fd\u6570\u7f16\u6392\u3002 Whitepaper","title":"Concept"},{"location":"serverless/concept/#_1","text":"Why Cloud Native Cloud Native \u5386\u53f2 \u4ec0\u4e48\u662f Serverless \u5bf9\u6bd4 Serverful IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd \u4ec0\u4e48\u4e0d\u662f Serverless \u4e00\u4e2a\u4f8b\u5b50 Serverless \u7684\u6280\u672f\u7279\u70b9 Serverless \u7684\u4f18\u52bf Serverless \u7684\u5c40\u9650\u6027 Serverless \u5e94\u7528\u573a\u666f Serverless \u5f00\u6e90\u6846\u67b6 CNCF Serverless WG","title":"\u76ee\u5f55"},{"location":"serverless/concept/#_2","text":"","title":"\u6b63\u6587"},{"location":"serverless/concept/#why-cloud-native","text":"Break up monolith \u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387 \u8282\u7701\u6210\u672c Abstraction of Infrastructure \u4e2a\u4eba\uff1a\u5f00\u53d1\u8005\u5173\u6ce8 Code \u800c\u975e Infrastructure \u516c\u53f8\uff1a\u66f4\u5feb\u7684\u5f00\u62d3\u5e02\u573a\uff08Money\uff09","title":"Why Cloud Native"},{"location":"serverless/concept/#cloud-native","text":"\u56e0\u6b64\uff0c Serverless \u662f\u4e91\u539f\u751f\u6280\u672f\u53d1\u5c55\u7684\u9ad8\u7ea7\u9636\u6bb5\u3002 \u4e0a\u4e00\u5bb6\u5355\u4f4d\u8fd8\u5904\u5728 Data Centre \u9636\u6bb5\uff0c\u800c\u4eca\u6211\u5728\u7814\u7a76 Serverless, \u770b\u6765\u6211\u8fdb\u5316\u4e86\u3002","title":"Cloud Native \u5386\u53f2"},{"location":"serverless/concept/#serverless","text":"\u5f00\u53d1\u8005\u4e0d\u5173\u6ce8\u670d\u52a1\u5668\uff0c\u53ea\u5173\u6ce8\u4ee3\u7801\u53ca\u4e1a\u52a1\u903b\u8f91\u3002 Serverless \u6307\u7684\u662f\u670d\u52a1\u7aef\u903b\u8f91\u7531\u5f00\u53d1\u8005\u5b9e\u73b0\uff0c\u8fd0\u884c\u5728\u65e0\u72b6\u6001\u7684\u8ba1\u7b97\u5bb9\u5668\u4e2d\uff0c\u7531\u4e8b\u4ef6\u89e6\u53d1\uff0c\u5b8c\u5168\u88ab\u7b2c\u4e09\u65b9\u7ba1\u7406\uff0c\u800c\u4e1a\u52a1\u5c42\u9762\u7684\u72b6\u6001\u5219\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u6216\u5b58\u50a8\u8d44\u6e90\u4e2d\u3002 \u5173\u952e\u8bcd\uff1ano server\uff0cstateless\uff0cevent-driven","title":"\u4ec0\u4e48\u662f Serverless"},{"location":"serverless/concept/#serverful","text":"\u5f31\u5316\u4e86\u5b58\u50a8\u548c\u8ba1\u7b97\u4e4b\u95f4\u7684\u8054\u7cfb \u4ee3\u7801\u7684\u6267\u884c\u4e0d\u518d\u9700\u8981\u624b\u52a8\u5206\u914d\u8d44\u6e90 \u6309\u4f7f\u7528\u91cf\u8ba1\u8d39","title":"\u5bf9\u6bd4 Serverful"},{"location":"serverless/concept/#iaaspaascaasfaas","text":"IaaS\uff1aInfrastructure as a Service PaaS\uff1aPlatform as a Service CaaS\uff1aContainer as a Service Faas\uff1a Function as a Service AaaS ...","title":"IaaS/PaaS/Caas/FaaS \u7b49\u540d\u8bcd"},{"location":"serverless/concept/#serverless_1","text":"\u5982\u679c\u4f60\u7684PaaS\u53ef\u4ee5\u5c06\u4ee5\u524d\u534a\u79d2\u542f\u52a8\u7684\u5e94\u7528\u572820ms\u5185\u542f\u52a8\uff0c\u5c31\u53eb\u5b83Serverless\u3002\u2014\u2014Adrian Cockcroft \u5927\u90e8\u5206 PaaS \u5e94\u7528\u4e0d\u4f1a\u4e3a\u4e86\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u542f\u52a8\u5e76\u7ed3\u675f\u6574\u4e2a\u5e94\u7528\uff0c\u800c this is what FaaS does\u3002","title":"\u4ec0\u4e48\u4e0d\u662f Serverless"},{"location":"serverless/concept/#serverless-faas","text":"\u4ece\u5916\u5ef6\u6765\u770b\uff0cServerless \u6bd4 FaaS \u7684\u5916\u5ef6\u8981\u5e7f\uff0cFaaS \u4e3b\u8981\u89e3\u51b3\u7684\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u903b\u8f91\u5982\u4f55\u505a\u5230 Serverless\uff0c\u53ef\u4ee5\u53eb\u505a Serverless Compute\u3002 \u6709\u5f20\u8001\u56fe\u627e\u4e0d\u5230\u4e86\uff0c\u4e0b\u8fb9\u627e\u4e86\u4e00\u5f20 Spring Serverless \u5b98\u7f51\u4ecb\u7ecd\u9875\u7684\u56fe\u4ee3\u66ff\uff0c\u610f\u601d\u5dee\u4e0d\u591a\u3002 \u76ee\u524d\u4e1a\u754c\u7684\u5404\u7c7b Serverless \u5b9e\u73b0\u6309\u529f\u80fd\u800c\u8a00\uff0c\u4e3b\u8981\u4e3a\u5e94\u7528\u670d\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u9762\u7684\u652f\u6301\uff1a\u51fd\u6570\u5373\u670d\u52a1\uff08Function as a Service\uff0cFaaS\uff09\u4ee5\u53ca\u540e\u53f0\u5373\u670d\u52a1\uff08Backend as a Service\uff0cBaaS\uff09\u3002 FaaS : FaaS \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5e73\u53f0\uff0c\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\uff0c\u5e94\u7528\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7684\u5f62\u5f0f\u5f00\u53d1\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u3002 Faas \u7684\u4e3b\u8981\u6982\u5ff5\u662f\uff0c\u5c06\u4f7f\u7528\u4e91\u670d\u52a1\u7684\u8fc7\u7a0b\u53d8\u5f97\u548c\u4f20\u7edf\u7f16\u7a0b\u4e00\u6837\uff1a\u4e00\u4e2a\u5e94\u7528\u7531\u5f88\u591a\u4e2a\u51fd\u6570\u7ec4\u6210\uff0c\u6bcf\u4e2a\u51fd\u6570\u6709\u8f93\u5165\u8f93\u51fa\uff0c\u5728\u51fd\u6570\u5185\u5b8c\u6210\u5fc5\u8981\u7684\u903b\u8f91\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u7f16\u5199\u597d\u51fd\u6570\u4ee3\u7801\uff0c\u5c06\u4ee3\u7801\u6ce8\u518c\u5230\u4e91\u7aef\uff0c\u5c06\u8fd9\u4e9b\u51fd\u6570\u7ec4\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u5373\u53ef\u3002 BaaS : \u901a\u8fc7 BaaS \u5e73\u53f0\u5c06\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5982\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u53ca\u5b58\u50a8\u7b49\u670d\u52a1\u5316\u5e76\u53d1\u5e03\u51fa\u6765\uff0c\u7528\u6237\u901a\u8fc7\u5411 BaaS \u5e73\u53f0\u7533\u8bf7\u6240\u9700\u8981\u7684\u670d\u52a1\u8fdb\u884c\u6d88\u8d39\uff0c\u800c\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u670d\u52a1\u7684\u5177\u4f53\u8fd0\u7ef4\u3002","title":"Serverless \u2260 FaaS"},{"location":"serverless/concept/#_3","text":"\u4e00\u4e2a\u4f20\u7edf\u7684\u4e09\u5c42 C/S \u67b6\u6784 \u6539\u9020\u6210 Serverless \u67b6\u6784 1. \u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684 BaaS \u670d\u52a1\uff0c\u8eab\u4efd\u9a8c\u8bc1\u903b\u8f91 2. \u53e6\u4e00\u4e2a BaaS \u793a\u4f8b\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u4e00\u90e8\u5206\u6570\u636e\u5e93\u5185\u5bb9 3. \u5148\u524d\u670d\u52a1\u5668\u7aef\u7684\u90e8\u5206\u903b\u8f91\u5df2\u7ecf\u8f6c\u79fb\u5230\u4e86\u5ba2\u6237\u7aef 4. \u670d\u52a1\u7aef\uff0c\u641c\u7d22\u529f\u80fd\u53ef\u4ee5\u4ece\u6301\u7eed\u8fd0\u884c\u7684\u670d\u52a1\u7aef\u4e2d\u62c6\u5206\u51fa\u6765\uff0c\u4ee5 FaaS \u7684\u65b9\u5f0f\u5b9e\u73b0 5. \u670d\u52a1\u7aef\uff0c\u8d2d\u4e70\u529f\u80fd\u6539\u5199\u4e3a\u53e6\u4e00\u4e2a FaaS \u51fd\u6570","title":"\u4e00\u4e2a\u4f8b\u5b50"},{"location":"serverless/concept/#serverless_2","text":"\u6309\u9700\u52a0\u8f7d \u4e8b\u4ef6\u9a71\u52a8 \u72b6\u6001\u975e\u672c\u5730\u6301\u4e45\u5316 \u975e\u4f1a\u8bdd\u4fdd\u6301 \u81ea\u52a8\u5f39\u6027\u4f38\u7f29 \u5e94\u7528\u51fd\u6570\u5316","title":"Serverless \u7684\u6280\u672f\u7279\u70b9"},{"location":"serverless/concept/#serverless_3","text":"\u63d0\u5347\u4eba\u529b\u6210\u672c \u964d\u4f4e\u98ce\u9669 \u51cf\u5c11\u8d44\u6e90\u5f00\u9500 \u589e\u52a0\u7f29\u653e\u7684\u7075\u6d3b\u6027 \u7f29\u77ed\u521b\u65b0\u5468\u671f","title":"Serverless \u7684\u4f18\u52bf"},{"location":"serverless/concept/#serverless_4","text":"\u72b6\u6001\u7ba1\u7406 \u51b7\u542f\u52a8\u5ef6\u8fdf \u672c\u5730\u6d4b\u8bd5","title":"Serverless \u7684\u5c40\u9650\u6027"},{"location":"serverless/concept/#serverless_5","text":"Serverless \u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u51b3\u5b9a\uff0c\u9002\u5408\u4ee5\u4e0b\u573a\u666f\uff1a \u5f02\u6b65\u7684\u5e76\u53d1\uff0c\u7ec4\u4ef6\u53ef\u72ec\u7acb\u90e8\u7f72\u548c\u6269\u5c55 \u5e94\u5bf9\u7a81\u53d1\u6216\u670d\u52a1\u4f7f\u7528\u91cf\u4e0d\u53ef\u9884\u6d4b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u8282\u7ea6\u6210\u672c\uff0c\u56e0\u4e3a Serverless \u5e94\u7528\u5728\u4e0d\u8fd0\u884c\u65f6\u4e0d\u6536\u8d39\uff09 \u77ed\u6682\u3001\u65e0\u72b6\u6001\u7684\u5e94\u7528\uff0c\u5bf9\u51b7\u542f\u52a8\u65f6\u95f4\u4e0d\u654f\u611f \u9700\u8981\u5feb\u901f\u5f00\u53d1\u8fed\u4ee3\u7684\u4e1a\u52a1\uff08\u56e0\u4e3a\u65e0\u9700\u63d0\u524d\u7533\u8bf7\u8d44\u6e90\uff0c\u56e0\u6b64\u53ef\u4ee5\u52a0\u5feb\u4e1a\u52a1\u4e0a\u7ebf\u901f\u5ea6\uff09 \u793a\u4f8b\uff1a ETL \u673a\u5668\u5b66\u4e60\u53ca AI \u6a21\u578b\u5904\u7406 \u56fe\u7247\u5904\u7406 IoT \u4f20\u611f\u5668\u6570\u636e\u5206\u6790 \u6d41\u5904\u7406 \u804a\u5929\u673a\u5668\u4eba","title":"Serverless \u5e94\u7528\u573a\u666f"},{"location":"serverless/concept/#serverless_6","text":"OpenFaas: \u6210\u719f\u6613\u7528\uff0c\u6838\u5fc3\u9879\u76ee\u4e0d\u591f\u6d3b\u8dc3\uff1b Knative: \u8d77\u6b65\u8f83\u665a\uff0cGoogle & IBM \u5927\u5382\u652f\u6301, \u65b0\u9c9c\uff0c\u771f\u9999\u3002","title":"Serverless \u5f00\u6e90\u6846\u67b6"},{"location":"serverless/concept/#cncf-serverless-wg","text":"CloudEvents \u89c4\u8303 \uff1a\u5b9a\u4e49\u6700\u5c0f\u5316\u7684\u4e8b\u4ef6\u901a\u7528\u5c5e\u6027\u3002 Workflow \u89c4\u8303 \uff1a\u51fd\u6570\u7f16\u6392\u3002 Whitepaper","title":"CNCF Serverless WG"},{"location":"serverless/knative/","text":"\u76ee\u5f55 \u00b6 Why Not Kubernetes Why Knative Serving (Core) Serving \u6a21\u578b Serving \u8d44\u6e90 Serving \u67b6\u6784 \u81ea\u52a8\u6269\u7f29\u5bb9 \u4e00\u4e2a service Eventing (Core) Eventing \u5b9e\u73b0\u7684\u529f\u80fd Eventing \u8d44\u6e90 Source Sink Eventing \u6a21\u578b \u7b80\u5355\u6295\u9012 \u901a\u9053\u4e0e\u8ba2\u9605 \u5e8f\u5217 \u5e76\u5217 \u9ed1\u76d2\u6a21\u578b Observability Build Tekton Pipeline Core Tekton Pipeline CRDs \u4e00\u4e2a Pipeline \u6d41\u7a0b DevOps \u603b\u7ed3 \u6b63\u6587 \u00b6 Why Not Kubernetes \u00b6 Most popular Container Management project today, Deloy and manage your containerized application. Components Apiserver Proxy Etcd Kubelet Controller Sheduler CNI Resources Pod Node Namespace Service Volume PersistentVolume Deployment Secret StatefulSet DaemonSet ServiceAccount ReplicationController ReplicaSet Job CronJob SecurityContext ResourceQuota LimitRange HorizontalPodAutoscaling Ingress ConfigMap Label CustomResourceDefinition Role ClusterRole Tools Yaml Spec helm Kubectl istio promethus ... \u5982\u679c\u4f60\u60f3\u6258\u7ba1\u4f60\u5f00\u53d1\u7684 app\uff0c\u4f60\u5f97\u6210\u4e3a\u4e00\u4e2a\u57fa\u7840\u8bbe\u65bd\u4e13\u5bb6\u3002\u4e8b\u4e0e\u613f\u8fdd\u3002 Why Knative \u00b6 \u7b80\u5316\u7684 application/container \u7ba1\u7406 \u8ba9\u5f00\u53d1\u8005\u5173\u6ce8 coding \u63d0\u4f9b PaaS \u548c Severless \u6982\u5ff5\u7684\u62bd\u8c61 Kubernetes \u7684\u6269\u5c55 Kubernetes \u4f5c\u4e3a\u5e95\u5c42 \u968f\u65f6\u53ef\u7528 Kubernetes \u539f\u751f\u80fd\u529b Knative \u7684\u53d7\u4f17 \u00b6 Knative \u8ddf Istio \u7684\u5173\u7cfb\uff1a \u8d77\u521d\uff0cIstio \u5728 Knative \u4e0b\u8fb9\uff1b \u540e\u6765\uff0cKnative \u5728 Istio \u4e0a\u8fb9 \u5982\u4eca\uff0c\u6ca1\u6709 Istio\u3002 Knative \u7ec4\u4ef6\u4ecb\u7ecd \u00b6 \u6838\u5fc3\u7ec4\u4ef6 Serving \u670d\u52a1\u7cfb\u7edf\uff0c\u7528\u6765\u914d\u7f6e\u5e94\u7528\u7684\u8def\u7531\u3001\u5347\u7ea7\u7b56\u7565\u3001\u81ea\u52a8\u6269\u7f29\u5bb9\u7b49\u529f\u80fd\u3002 \u6838\u5fc3\u7ec4\u4ef6 Eventing \u4e8b\u4ef6\u7cfb\u7edf\uff0c\u7528\u6765\u81ea\u52a8\u5b8c\u6210\u4e8b\u4ef6\u7684\u7ed1\u5b9a\u548c\u89e6\u53d1 Observability \u53ef\u89c6\u5316\u63d2\u4ef6 Prometheus& Grafana\uff0cELK\uff0cJaeger/Zipkin \u7b49\u3002 Build Teton\uff0c\u6784\u5efa\u7cfb\u7edf\uff0c\u4ece Knative \u9879\u76ee\u72ec\u7acb\u51fa\u53bb\u3002\u4e3b\u8981\u5b8c\u6210\u4e24\u6b65\uff1a source \u5230 image\uff0cdeploy on Knative\u3002 Serving (Core) \u00b6 Serving \u6a21\u578b \u00b6 \u90e8\u7f72 app as Pod/Revision \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u81ea\u52a8\u5efa\u7acb\u7f51\u7edc\uff0c\u66b4\u9732 endpoint Revision \u81ea\u52a8\u6269\u7f29\u5bb9\uff08\u53ef\u4ee5 scale to 0\uff09 \u5f53\u66f4\u65b0 Revision \u65f6\uff0c\u81ea\u52a8\u8fc1\u79fb\u5230\u65b0\u7684 Traffice Splitting, \u6d41\u91cf\u6839\u636e\u914d\u7f6e\u5206\u53d1\u5230\u67d0\u4e2aRevision\u3002 \u4e13\u7528 URLs \u9488\u5bf9 Revision Serving \u8d44\u6e90 \u00b6 Service : service.serving.knative.dev \u7ba1\u7406\u670d\u52a1\u7684\u751f\u547d\u5468\u671f\u3002\u786e\u4fdd\u6bcf\u6b21\u521b\u5efa\u90fd\u6709 Route, Configuration \u548c Revision\u3002 Route : route.serving.knative.dev \u5b9a\u4e49\u7f51\u7edc\u7aef\u53e3\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u6216\u591a\u4e2aRevision\uff0c\u63d0\u4f9b\u6d41\u91cf\u5206\u53d1\u7ba1\u7406\u3002 Configuration : configuration.serving.knative.dev \u7ef4\u62a4 deployment \u7684\u671f\u671b\u72b6\u6001\uff0c\u5e76\u53d1\u6570, Min/Max/Target Scale \u7b49\u3002 \u4fee\u6539 Configuration \u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a Revision\u3002 Revision : revision.serving.knative.dev \u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u548c\u914d\u7f6e\u7684\u5feb\u7167\u3002Revisions \u4e0d\u53ef\u66f4\u6539\uff0c\u4e14\u6839\u636e\u6d41\u91cf\u81ea\u52a8\u6269\u7f29\u3002 Serving \u67b6\u6784 \u00b6 $ kubectl apply -f serving-core.yaml\uff0c serving \u7684\u6838\u5fc3\u7ec4\u4ef6\u5982\u56fe\u3002 \u53ef\u4ee5\u770b\u5230 \u518d namespace knative-serving \u4e0b\uff0c\u6709 controller \u3001webhook \u3001autoscaler\u3001activator \u8fd9\u56db\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1b \u5176\u5b9e\uff0c\u8fd8\u6709\u4e00\u4e2a queue, \u8fd0\u884c\u5728\u6bcf\u4e2a\u5e94\u7528\u7684 pod \u91cc\uff0c\u4f5c\u4e3a sidecar \u5b58\u5728\u3002 Controller \u8d1f\u8f7d Service \u6574\u4e2a\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u6d89\u53ca\u3001Configuration\u3001Route\u3001Revision \u7b49\u7684 CURD\u3002 Webhook \u4e3b\u8981\u8d1f\u8d23\u521b\u5efa\u548c\u66f4\u65b0\u7684\u53c2\u6570\u6821\u9a8c\u3002 Autoscaler \u6839\u636e\u5e94\u7528\u7684\u8bf7\u6c42\u5e76\u53d1\u91cf\u5bf9\u5e94\u7528\u6269\u7f29\u5bb9\u3002 Activator \u8d1f\u8d23\u4ece 0 \u5230 1\u3002\u5728\u5e94\u7528\u7f29\u5bb9\u5230 0 \u540e\uff0c\u62e6\u622a\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u901a\u77e5 autoscaler \u542f\u52a8\u76f8\u5e94\u5e94\u7528\u5b9e\u4f8b\uff0c\u7b49\u5f85\u542f\u52a8\u540e\u5c06\u8bf7\u6c42\u8f6c\u53d1\u3002 Queue \u8d1f\u8f7d\u62e6\u622a\u8f6c\u53d1\u7ed9 Pod \u7684\u8bf7\u6c42\uff0c\u7528\u4e8e\u7edf\u8ba1 Pod \u7684\u8bf7\u6c42\u5e76\u53d1\u91cf\u7b49\uff0cautoscaler \u4f1a\u8bbf\u95ee queue \u83b7\u53d6\u76f8\u5e94\u6570\u636e\u5bf9\u5e94\u7528\u6269\u7f29\u5bb9\u3002 \u81ea\u52a8\u6269\u7f29\u5bb9 \u00b6 \u5982\u4f55\u53d1\u751f 1 -> n\uff1a\u4efb\u4f55\u8bbf\u95ee\u5e94\u7528\u7684\u8bf7\u6c42\u5728\u8fdb\u5165 Pod \u540e\u90fd\u4f1a\u88ab Queue \u62e6\u622a\uff0c\u7edf\u8ba1\u5f53\u524d Pod \u7684\u8bf7\u6c42\u5e76\u53d1\u6570\uff0c\u540c\u65f6 Queue \u4f1a\u5f00\u653e\u4e00\u4e2a metric \u63a5\u53e3\uff0cautoscalor \u901a\u8fc7\u8bbf\u95ee\u8be5\u7aef\u53e3\u53bb\u83b7\u53d6 Pod \u7684\u8bf7\u6c42\u5e76\u53d1\u91cf\u5e76\u8ba1\u7b97\u662f\u5426\u9700\u8981\u6269\u7f29\u5bb9\u3002\u5f53\u9700\u8981\u6269\u7f29\u5bb9\u65f6\uff0cautoscalor \u4f1a\u901a\u8fc7\u4fee\u6539 Revision \u4e0b\u7684 deployment \u7684\u5b9e\u4f8b\u4e2a\u6570\u8fbe\u5230\u6269\u7f29\u5bb9\u7684\u6548\u679c\u3002 0 -> 1\uff1a\u5728\u5e94\u7528\u957f\u65f6\u95f4\u65e0\u8bf7\u6c42\u8bbf\u95ee\u65f6\uff0c\u5b9e\u4f8b\u4f1a\u7f29\u51cf\u5230 0\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8bbf\u95ee\u5e94\u7528\u7684\u8bf7\u6c42\u4f1a\u88ab\u8f6c\u53d1\u5230 activator\uff0c\u5e76\u5728\u8bf7\u6c42\u5728\u8f6c\u53d1\u5230 activator \u4e4b\u524d\u4f1a\u88ab\u6807\u8bb0\u8bf7\u6c42\u8bbf\u95ee\u7684 Revision \u4fe1\u606f\uff08\u7531 controller \u4fee\u6539 VirtualService \u5b9e\u73b0\uff09\u3002activator \u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c06\u6539 Revision \u7684\u5e76\u53d1\u91cf\u52a0 1\uff0c\u5e76\u5c06 metric \u63a8\u9001\u7ed9 autoscalor\uff0c\u542f\u52a8 Pod\u3002\u540c\u65f6\uff0cactivator \u76d1\u63a7 Revision \u7684\u542f\u52a8\u72b6\u6001\uff0cRevision \u6b63\u5e38\u542f\u52a8\u540e\uff0c\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u76f8\u5e94\u7684 Pod\u3002 \u5f53\u7136\uff0c\u5728 Revision \u6b63\u5e38\u542f\u52a8\u540e\uff0c\u5e94\u7528\u7684\u8bf7\u6c42\u5c06\u4e0d\u4f1a\u518d\u53d1\u9001\u5230 activator\uff0c\u800c\u4e14\u76f4\u63a5\u53d1\u9001\u81f3\u5e94\u7528\u7684 Pod\uff08\u7531 controller \u4fee\u6539 VirtualService \u5b9e\u73b0\uff09\u3002 \u76d1\u63a7\u6307\u6807 KPA \u6839\u636e\u5e76\u53d1\u6570\u8fdb\u884c\u4f38\u7f29\uff0c kpa.autoscaling.knative.dev \u3002 HPA \u6839\u636e\u5236CPU\u8fdb\u884c\u4f38\u7f29\uff0c hpa.autoscaling.knative.dev \uff0c\u76f4\u63a5\u5229\u7528 k8s \u7684HPA\u80fd\u529b\u3002 \u4e00\u4e2a service \u00b6 # helloworld-go.yaml apiVersion : serving.knative.dev/v1 # Current version of Knative kind : Service metadata : name : helloworld-go namespace : default spec : template : metadata : name : helloworld-go-1 spec : containers : - image : gcr.io/knative-samples/helloworld-go env : - name : TARGET value : \"Go Sample v1\" kubectl apply -f helloworld-go.yaml \u4e00\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002 Service | -> Route | -> Configuration -> Revision Revision | -> Deployment / PodAutoscaler | -> ServerlessService Route -> ClusterIngress -> VitualService(istio) Traffic-spitting apiVersion : serving.knative.dev/v1 # Current version of Knative kind : Service metadata : name : helloworld-go namespace : default spec : template : metadata : name : helloworld-go-2 spec : containers : - image : gcr.io/knative-samples/helloworld-go env : - name : TARGET value : \"Go Sample v2\" traffic : - tag : current revisionName : helloworld-go-1 percent : 50 - tag : candidate revisionName : helloworld-go-2 percent : 50 - tag : latest latestRevision : true percent : 0 Eventing (Core) \u00b6 Knative Eventing is a system that is designed to address a common need for cloud native development and provides composable primitives to enable late-binding event sources and event consumers. Eventing \u5b9e\u73b0\u7684\u529f\u80fd \u00b6 \u53ef\u9760\u7684\u6d88\u606f\u901a\u9053 \u8ba2\u9605\u8f6c\u53d1\u673a\u5236 Eventing \u8d44\u6e90 \u00b6 Event Source\uff1a\u628a\u65f6\u95f4\u751f\u4ea7\u8005\u63a5\u5165 Knative Eventing \u5e73\u53f0\uff0c\u5e76\u628a\u4e8b\u4ef6\u4f20\u5230\u6d88\u8d39\u8005\u3002 Channel\uff1a \u5b9e\u73b0\u4e8b\u4ef6\u8f6c\u53d1\u548c\u5b58\u50a8\uff0c\u652f\u6301 Kafka \u548c NATS Streaming Subscription\uff1a\u4e8b\u4ef6\u8ba2\u9605\u8005\u3002 Squence: \u4e8b\u4ef6\u4f9d\u6b21\u8f6c\u53d1\u7ed9\u591a\u4e2a\u8ba2\u9605\u8005\u7684\u4e00\u79cd\u673a\u5236 Parallel\uff1a\u4e8b\u4ef6\u540c\u65f6\u8f6c\u53d1\u7ed9\u591a\u4e2a\u8ba2\u9605\u8005\u7684\u4e00\u79cd\u673a\u5236 Broker\uff1a\u63a5\u53d7\u4e8b\u4ef6\uff0c\u5e76\u5c06\u4e8b\u4ef6\u8f6c\u53d1\u5230\u8ba2\u9605\u8005\u3002 Trigger\uff1a\u4e8b\u4ef6\u8ba2\u9605\u3002 Event Registry \u6ce8\u518c\u4e2d\u5fc3\uff0c\u4e8b\u4ef6\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u53ef\u67e5\u770b\u3002 ### Source Knative \u4e2d\u6709\u4e2a\u8d44\u6e90\u53eb EventSource\u3002\u7528\u4e8e\u628a\u4e8b\u4ef6\u751f\u4ea7\u8005\u63a5\u5165 Knative \u4e8b\u4ef6\u5e73\u53f0\u3002 \u4e8b\u4ef6\u751f\u4ea7\u8005\u5728 Knative \u4e8b\u4ef6\u5e73\u53f0\u7684\u62bd\u8c61 Spec \u53c2\u6570 Sink Knative \u4e2d\u5df2\u6709\u7684\u9884\u5b9a\u4e49\u8d44\u6e90\u7c7b\u578b\uff1a APIServerSource GithubSource AwsSource ContainerSource CronJobSource ... Sink \u00b6 Sink \u8868\u793a\u4e8b\u4ef6\u6d88\u606f\u4f20\u9001\u7684\u76ee\u7684\u5730\uff0c\u66b4\u9732\u4e00\u4e2a HTTP \u7aef\u53e3\u3002\u4e0d\u662f\u4e00\u4e2a\u5177\u4f53\u8d44\u6e90\u3002 \u5728 Kubernets\uff0c\u53ea\u8981\u5e26\u7740\u5c5e\u6027\uff1astatus.address.hostname \u7684\u90fd\u53ef\u4ee5\u770b\u4f5c sink\u3002 \u4e24\u79cd\u7c7b\u578b\uff1a Addressable: \u66b4\u9732\u4e00\u4e2aHTTP \u7aef\u53e3\uff0c\u63a5\u53d7\u6d88\u606f\uff0c\u8fd4\u56de\u6210\u529f\u6216\u5931\u8d25\u3002 Callable: \u66b4\u9732\u4e00\u4e2aHTTP \u7aef\u53e3\uff0c\u63a5\u53d7\u6d88\u606f\uff0c\u8fd4\u56de 0 \u5230 1 \u4e2a\u65b0\u4e8b\u4ef6\u3002 Knative \u4e2d\u7684 Sink \u7c7b\u578b\u7684\u8d44\u6e90\uff1a Service, Channel, Broker, Parallel \u53ca Sequence Eventing Models \u00b6 \u6a21\u578b\u4e00 \u00b6 Simple Dlivery \u7b80\u5355\u6295\u9012 \u5b9a\u4e49\u4e8b\u4ef6\u6e90 \u901a\u8fc7 Sink \u6307\u5b9a\u6d88\u8d39\u8005\u5730\u5740 # event-source.yaml apiVersion: sources.knative.dev/v1alpha2 kind: CronJobSource metadata: name: test-heartbeats spec: template: spec: containers: - image: <heartbeats_image_uri> name: heartbeats args: - --period=1 env: - name: POD_NAME value: \"mypod\" - name: POD_NAMESPACE value: \"event-test\" sink: ref: apiVersion: serving.knative.dev/v1 kind: Service name: event-display \u6a21\u578b\u4e8c \u00b6 Channel & Subscription \u901a\u9053\u4e0e\u8ba2\u9605 \u901a\u9053 Channel, \u4ee3\u8868\u4e8b\u4ef6\u7684\u8f6c\u53d1\u548c\u6301\u4e45\u5316\u3002 \u8ba2\u9605\u63cf\u8ff0\u901a\u9053\u4e0e\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e5f\u80fd\u8fde\u63a5\u6d88\u8d39\u8005\u4e0e\u7b2c\u4e8c\u4e2a\u901a\u9053\uff0c\u7528\u4e8e\u5904\u7406\u6d88\u8d39\u8005\u8fd4\u56de\u7684\u4e8b\u4ef6\u3002 \u8ba2\u9605 Subscription\uff0c\u652f\u6301\u4e0d\u540c\u6280\u672f\u7684\u901a\u9053\uff0c\u5982 Kafka, NATS Streaming \u7b49\u3002 \u901a\u9053\u4e0e\u8ba2\u9605\uff0c\u4e00\u5bf9\u591a\u3002 # channel.yaml apiVersion: messaging.knative.dev/v1alpha1 kind: Channel metadata: name: my-channel # event-source.yaml ... spec: ... sink: apiVersion: messaging.knative.dev/v1 Kind: Channel name: my-channel # subscription.yaml apiVersion: eventing.knative.dev/v1alpha2 kind: Subscription metadata: name: test-subscription spec: channel: apiVersion: messaging.knative.dev/v1 kind: Channel name: my-channel subscriber: apiVersion: serving.knative.dev/v1 kind: Service name: event-display \u6a21\u578b\u4e09 \u00b6 Sequence \u5e8f\u5217 Sequence \u5b9a\u4e49\u4e00\u7cfb\u5217\u4f9d\u6b21\u6267\u884c\u4e8b\u4ef6 \u4e8b\u4ef6\u53d1\u9001\u7ed9\u670d\u52a1 \u670d\u52a1\u53ef\u4ee5\u4fee\u6539 or \u521b\u5efa\u65b0\u7684\u4e8b\u4ef6 # event-source.yaml ... spec: ... sink: apiVersion: messaging.knative.dev/v1 Kind: Sequence name: my-sequence # sequence.yaml apiVersion: eventing.knative.dev/v1alpha2 kind: Sequence metadata: name: my-sequence spec: steps: - ref: apiVersion: serving.knative.dev/v1 kind: Service name: step-1 - ref: apiVersion: serving.knative.dev/v1 kind: Service name: step-2 - ref: apiVersion: serving.knative.dev/v1 kind: Service name: step-3 \u6a21\u578b\u56db \u00b6 Parallel \u5e76\u5217 Parallel \u5b9a\u4e49\u4e00\u7cfb\u5217\u5e76\u884c\u4e8b\u4ef6 \u6bcf\u4e2a\u670d\u52a1\u63a5\u53d7\u5230\u540c\u4e00\u4e8b\u4ef6 \u6bcf\u4e2a\u5206\u652f\u5b9a\u4e49 filter # event-source.yaml ... spec : ... sink : apiVersion : messaging.knative.dev/v1 Kind : Parallel name : my-parallel # parallel.yaml apiVersion : eventing.knative.dev/v1alpha2 kind : Parallel metadata : name : my-parallel spec : branches : - filter ref : apiVersion : serving.knative.dev/v1 kind : Service name : filter-1 subscriber : ref : apiVersion : serving.knative.dev/v1 kind : Service name : mysevice-1 - filter ref : apiVersion : serving.knative.dev/v1 kind : Service name : filter-2 subscriber : ref : apiVersion : serving.knative.dev/v1 kind : Service name : mysevice-2 \u6a21\u578b\u4e94 \u00b6 Tigger & Broker \u9ed1\u76d2\u6a21\u578b \u642d\u5efa\u9ed1\u76d2\uff0c\u9690\u85cf\u5177\u4f53\u5b9e\u73b0\uff0c\u7528\u6237\u4e0d\u5173\u5fc3 Broker \u4e8b\u4ef6\u6876\uff0c\u63a5\u5165\u5404\u79cd\u4e8b\u4ef6\uff0c\u4e8b\u4ef6\u5177\u6709\u5404\u79cd\u5c5e\u6027\u7528\u6765\u533a\u5206 Tigger \u8fc7\u6ee4\u5668\uff0c\u53ea\u6709\u901a\u8fc7\u8fc7\u6ee4\u5668\u7684\u6761\u4ef6\u624d\u80fd\u4f20\u7ed9\u6d88\u8d39\u8005 # Broker: knative \u81ea\u5df1\u5b9e\u73b0\uff0c\u5b89\u88c5\u5373\u53ef\u3002 broker-filter broker-ingress # Trigger.yaml apiVersion : eventing.knative.dev/v1beta1 kind : Trigger metadata : name : my-trigger spec : filter : attributes : type : dev.knative.sources.ping subscriber : ref : apiVersion : serving.knative.dev/v1beta1 kind : Service name : event-display Observability \u00b6 Logging: ELK Monitoring: Promethus & Grafana Tracing: Jaeger/Zipkin Build \u00b6 Tekton Pipeline Core \u00b6 pipeline-controller Pipeline-webhook Tekton Pipeline CRDs \u00b6 Tekton \u4e3a Kubernetes \u63d0\u4f9b\u4e86\u591a\u79cd CRD \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u5b9a\u4e49\u6211\u4eec\u7684\u6d41\u6c34\u7ebf\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a Task\uff1a\u5b9a\u4e49\u4e86\u4e00\u7ec4\u6784\u5efa\u6b65\u9aa4\uff0c\u5982\u7f16\u8bd1\u4ee3\u7801\u3001\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u53ca\u6784\u5efa\u548c\u90e8\u7f72\u955c\u50cf\u3002\u8868\u793a\u6267\u884c\u547d\u4ee4\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\uff0ctask \u91cc\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684 steps\uff0c\u4f8b\u5982\u7f16\u8bd1\u4ee3\u7801\u3001\u6784\u5efa\u955c\u50cf\u3001\u63a8\u9001\u955c\u50cf\u7b49\uff0c\u6bcf\u4e2a step \u5b9e\u9645\u7531\u4e00\u4e2a Pod \u6267\u884c\u3002 TaskRun\uff1atask \u53ea\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6a21\u7248\uff0ctaskRun \u624d\u771f\u6b63\u4ee3\u8868\u4e86\u4e00\u6b21\u5b9e\u9645\u7684\u8fd0\u884c\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u521b\u5efa\u4e00\u4e2a taskRun\uff0ctaskRun \u521b\u5efa\u51fa\u6765\u4e4b\u540e\uff0c\u5c31\u4f1a\u81ea\u52a8\u89e6\u53d1 task \u63cf\u8ff0\u7684\u6784\u5efa\u4efb\u52a1\u3002 Pipeline\uff1a\u5b9a\u4e49\u4e86\u6784\u6210\u6d41\u6c34\u7ebf\u7684 Tasks \u3002\u4e00\u7ec4\u4efb\u52a1\uff0c\u8868\u793a\u4e00\u4e2a\u6216\u591a\u4e2a task\u3001PipelineResource \u4ee5\u53ca\u5404\u79cd\u5b9a\u4e49\u53c2\u6570\u7684\u96c6\u5408\u3002 PipelineRun\uff1a\u5b9a\u4e49\u4e86\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u3002\u5b83\u5f15\u7528\u8981\u8fd0\u884c\u7684 Pipeline \u4ee5\u53ca\u8981\u7528\u4f5c\u8f93\u5165\u548c\u8f93\u51fa\u7684 PipelineResources \u3002\u7c7b\u4f3c task \u548c taskRun \u7684\u5173\u7cfb\uff0cpipelineRun \u4e5f\u8868\u793a\u67d0\u4e00\u6b21\u5b9e\u9645\u8fd0\u884c\u7684 pipeline\uff0c\u4e0b\u53d1\u4e00\u4e2a pipelineRun CRD \u5b9e\u4f8b\u5230 Kubernetes\u540e\uff0c\u540c\u6837\u4e5f\u4f1a\u89e6\u53d1\u4e00\u6b21 pipeline \u7684\u6784\u5efa\u3002 PipelineResource\uff1a\u6d41\u6c34\u7ebf\u7684\u8f93\u5165\uff08\u4f8b\u5982 git \u5b58\u50a8\u5e93\uff09\u6216\u8f93\u51fa\uff08\u4f8b\u5982 docker \u955c\u50cf\uff09\u3002\u8868\u793a pipeline \u8f93\u5165\u8d44\u6e90\uff0c\u6bd4\u5982 github \u4e0a\u7684\u6e90\u7801\uff0c\u6216\u8005 pipeline \u8f93\u51fa\u8d44\u6e90\uff0c\u4f8b\u5982\u4e00\u4e2a\u5bb9\u5668\u955c\u50cf\u6216\u8005\u6784\u5efa\u751f\u6210\u7684 jar \u5305\u7b49\u3002 \u4e00\u4e2a Pipeline \u6d41\u7a0b \u00b6 DevOps \u00b6 \u603b\u7ed3 \u00b6 Cloud Native/Serverless/Faas \u6982\u5ff5 Stack: Kubernetes, Istio, microservices, logging/monitoring/tracing, OpenFaas \u548c Knative","title":"Knative"},{"location":"serverless/knative/#_1","text":"Why Not Kubernetes Why Knative Serving (Core) Serving \u6a21\u578b Serving \u8d44\u6e90 Serving \u67b6\u6784 \u81ea\u52a8\u6269\u7f29\u5bb9 \u4e00\u4e2a service Eventing (Core) Eventing \u5b9e\u73b0\u7684\u529f\u80fd Eventing \u8d44\u6e90 Source Sink Eventing \u6a21\u578b \u7b80\u5355\u6295\u9012 \u901a\u9053\u4e0e\u8ba2\u9605 \u5e8f\u5217 \u5e76\u5217 \u9ed1\u76d2\u6a21\u578b Observability Build Tekton Pipeline Core Tekton Pipeline CRDs \u4e00\u4e2a Pipeline \u6d41\u7a0b DevOps \u603b\u7ed3","title":"\u76ee\u5f55"},{"location":"serverless/knative/#_2","text":"","title":"\u6b63\u6587"},{"location":"serverless/knative/#why-not-kubernetes","text":"Most popular Container Management project today, Deloy and manage your containerized application. Components Apiserver Proxy Etcd Kubelet Controller Sheduler CNI Resources Pod Node Namespace Service Volume PersistentVolume Deployment Secret StatefulSet DaemonSet ServiceAccount ReplicationController ReplicaSet Job CronJob SecurityContext ResourceQuota LimitRange HorizontalPodAutoscaling Ingress ConfigMap Label CustomResourceDefinition Role ClusterRole Tools Yaml Spec helm Kubectl istio promethus ... \u5982\u679c\u4f60\u60f3\u6258\u7ba1\u4f60\u5f00\u53d1\u7684 app\uff0c\u4f60\u5f97\u6210\u4e3a\u4e00\u4e2a\u57fa\u7840\u8bbe\u65bd\u4e13\u5bb6\u3002\u4e8b\u4e0e\u613f\u8fdd\u3002","title":"Why Not Kubernetes"},{"location":"serverless/knative/#why-knative","text":"\u7b80\u5316\u7684 application/container \u7ba1\u7406 \u8ba9\u5f00\u53d1\u8005\u5173\u6ce8 coding \u63d0\u4f9b PaaS \u548c Severless \u6982\u5ff5\u7684\u62bd\u8c61 Kubernetes \u7684\u6269\u5c55 Kubernetes \u4f5c\u4e3a\u5e95\u5c42 \u968f\u65f6\u53ef\u7528 Kubernetes \u539f\u751f\u80fd\u529b","title":"Why Knative"},{"location":"serverless/knative/#knative","text":"Knative \u8ddf Istio \u7684\u5173\u7cfb\uff1a \u8d77\u521d\uff0cIstio \u5728 Knative \u4e0b\u8fb9\uff1b \u540e\u6765\uff0cKnative \u5728 Istio \u4e0a\u8fb9 \u5982\u4eca\uff0c\u6ca1\u6709 Istio\u3002","title":"Knative \u7684\u53d7\u4f17"},{"location":"serverless/knative/#knative_1","text":"\u6838\u5fc3\u7ec4\u4ef6 Serving \u670d\u52a1\u7cfb\u7edf\uff0c\u7528\u6765\u914d\u7f6e\u5e94\u7528\u7684\u8def\u7531\u3001\u5347\u7ea7\u7b56\u7565\u3001\u81ea\u52a8\u6269\u7f29\u5bb9\u7b49\u529f\u80fd\u3002 \u6838\u5fc3\u7ec4\u4ef6 Eventing \u4e8b\u4ef6\u7cfb\u7edf\uff0c\u7528\u6765\u81ea\u52a8\u5b8c\u6210\u4e8b\u4ef6\u7684\u7ed1\u5b9a\u548c\u89e6\u53d1 Observability \u53ef\u89c6\u5316\u63d2\u4ef6 Prometheus& Grafana\uff0cELK\uff0cJaeger/Zipkin \u7b49\u3002 Build Teton\uff0c\u6784\u5efa\u7cfb\u7edf\uff0c\u4ece Knative \u9879\u76ee\u72ec\u7acb\u51fa\u53bb\u3002\u4e3b\u8981\u5b8c\u6210\u4e24\u6b65\uff1a source \u5230 image\uff0cdeploy on Knative\u3002","title":"Knative \u7ec4\u4ef6\u4ecb\u7ecd"},{"location":"serverless/knative/#serving-core","text":"","title":"Serving (Core)"},{"location":"serverless/knative/#serving","text":"\u90e8\u7f72 app as Pod/Revision \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u81ea\u52a8\u5efa\u7acb\u7f51\u7edc\uff0c\u66b4\u9732 endpoint Revision \u81ea\u52a8\u6269\u7f29\u5bb9\uff08\u53ef\u4ee5 scale to 0\uff09 \u5f53\u66f4\u65b0 Revision \u65f6\uff0c\u81ea\u52a8\u8fc1\u79fb\u5230\u65b0\u7684 Traffice Splitting, \u6d41\u91cf\u6839\u636e\u914d\u7f6e\u5206\u53d1\u5230\u67d0\u4e2aRevision\u3002 \u4e13\u7528 URLs \u9488\u5bf9 Revision","title":"Serving \u6a21\u578b"},{"location":"serverless/knative/#serving_1","text":"Service : service.serving.knative.dev \u7ba1\u7406\u670d\u52a1\u7684\u751f\u547d\u5468\u671f\u3002\u786e\u4fdd\u6bcf\u6b21\u521b\u5efa\u90fd\u6709 Route, Configuration \u548c Revision\u3002 Route : route.serving.knative.dev \u5b9a\u4e49\u7f51\u7edc\u7aef\u53e3\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u6216\u591a\u4e2aRevision\uff0c\u63d0\u4f9b\u6d41\u91cf\u5206\u53d1\u7ba1\u7406\u3002 Configuration : configuration.serving.knative.dev \u7ef4\u62a4 deployment \u7684\u671f\u671b\u72b6\u6001\uff0c\u5e76\u53d1\u6570, Min/Max/Target Scale \u7b49\u3002 \u4fee\u6539 Configuration \u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a Revision\u3002 Revision : revision.serving.knative.dev \u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u548c\u914d\u7f6e\u7684\u5feb\u7167\u3002Revisions \u4e0d\u53ef\u66f4\u6539\uff0c\u4e14\u6839\u636e\u6d41\u91cf\u81ea\u52a8\u6269\u7f29\u3002","title":"Serving \u8d44\u6e90"},{"location":"serverless/knative/#serving_2","text":"$ kubectl apply -f serving-core.yaml\uff0c serving \u7684\u6838\u5fc3\u7ec4\u4ef6\u5982\u56fe\u3002 \u53ef\u4ee5\u770b\u5230 \u518d namespace knative-serving \u4e0b\uff0c\u6709 controller \u3001webhook \u3001autoscaler\u3001activator \u8fd9\u56db\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1b \u5176\u5b9e\uff0c\u8fd8\u6709\u4e00\u4e2a queue, \u8fd0\u884c\u5728\u6bcf\u4e2a\u5e94\u7528\u7684 pod \u91cc\uff0c\u4f5c\u4e3a sidecar \u5b58\u5728\u3002 Controller \u8d1f\u8f7d Service \u6574\u4e2a\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u6d89\u53ca\u3001Configuration\u3001Route\u3001Revision \u7b49\u7684 CURD\u3002 Webhook \u4e3b\u8981\u8d1f\u8d23\u521b\u5efa\u548c\u66f4\u65b0\u7684\u53c2\u6570\u6821\u9a8c\u3002 Autoscaler \u6839\u636e\u5e94\u7528\u7684\u8bf7\u6c42\u5e76\u53d1\u91cf\u5bf9\u5e94\u7528\u6269\u7f29\u5bb9\u3002 Activator \u8d1f\u8d23\u4ece 0 \u5230 1\u3002\u5728\u5e94\u7528\u7f29\u5bb9\u5230 0 \u540e\uff0c\u62e6\u622a\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u901a\u77e5 autoscaler \u542f\u52a8\u76f8\u5e94\u5e94\u7528\u5b9e\u4f8b\uff0c\u7b49\u5f85\u542f\u52a8\u540e\u5c06\u8bf7\u6c42\u8f6c\u53d1\u3002 Queue \u8d1f\u8f7d\u62e6\u622a\u8f6c\u53d1\u7ed9 Pod \u7684\u8bf7\u6c42\uff0c\u7528\u4e8e\u7edf\u8ba1 Pod \u7684\u8bf7\u6c42\u5e76\u53d1\u91cf\u7b49\uff0cautoscaler \u4f1a\u8bbf\u95ee queue \u83b7\u53d6\u76f8\u5e94\u6570\u636e\u5bf9\u5e94\u7528\u6269\u7f29\u5bb9\u3002","title":"Serving \u67b6\u6784"},{"location":"serverless/knative/#_3","text":"\u5982\u4f55\u53d1\u751f 1 -> n\uff1a\u4efb\u4f55\u8bbf\u95ee\u5e94\u7528\u7684\u8bf7\u6c42\u5728\u8fdb\u5165 Pod \u540e\u90fd\u4f1a\u88ab Queue \u62e6\u622a\uff0c\u7edf\u8ba1\u5f53\u524d Pod \u7684\u8bf7\u6c42\u5e76\u53d1\u6570\uff0c\u540c\u65f6 Queue \u4f1a\u5f00\u653e\u4e00\u4e2a metric \u63a5\u53e3\uff0cautoscalor \u901a\u8fc7\u8bbf\u95ee\u8be5\u7aef\u53e3\u53bb\u83b7\u53d6 Pod \u7684\u8bf7\u6c42\u5e76\u53d1\u91cf\u5e76\u8ba1\u7b97\u662f\u5426\u9700\u8981\u6269\u7f29\u5bb9\u3002\u5f53\u9700\u8981\u6269\u7f29\u5bb9\u65f6\uff0cautoscalor \u4f1a\u901a\u8fc7\u4fee\u6539 Revision \u4e0b\u7684 deployment \u7684\u5b9e\u4f8b\u4e2a\u6570\u8fbe\u5230\u6269\u7f29\u5bb9\u7684\u6548\u679c\u3002 0 -> 1\uff1a\u5728\u5e94\u7528\u957f\u65f6\u95f4\u65e0\u8bf7\u6c42\u8bbf\u95ee\u65f6\uff0c\u5b9e\u4f8b\u4f1a\u7f29\u51cf\u5230 0\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8bbf\u95ee\u5e94\u7528\u7684\u8bf7\u6c42\u4f1a\u88ab\u8f6c\u53d1\u5230 activator\uff0c\u5e76\u5728\u8bf7\u6c42\u5728\u8f6c\u53d1\u5230 activator \u4e4b\u524d\u4f1a\u88ab\u6807\u8bb0\u8bf7\u6c42\u8bbf\u95ee\u7684 Revision \u4fe1\u606f\uff08\u7531 controller \u4fee\u6539 VirtualService \u5b9e\u73b0\uff09\u3002activator \u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c06\u6539 Revision \u7684\u5e76\u53d1\u91cf\u52a0 1\uff0c\u5e76\u5c06 metric \u63a8\u9001\u7ed9 autoscalor\uff0c\u542f\u52a8 Pod\u3002\u540c\u65f6\uff0cactivator \u76d1\u63a7 Revision \u7684\u542f\u52a8\u72b6\u6001\uff0cRevision \u6b63\u5e38\u542f\u52a8\u540e\uff0c\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u76f8\u5e94\u7684 Pod\u3002 \u5f53\u7136\uff0c\u5728 Revision \u6b63\u5e38\u542f\u52a8\u540e\uff0c\u5e94\u7528\u7684\u8bf7\u6c42\u5c06\u4e0d\u4f1a\u518d\u53d1\u9001\u5230 activator\uff0c\u800c\u4e14\u76f4\u63a5\u53d1\u9001\u81f3\u5e94\u7528\u7684 Pod\uff08\u7531 controller \u4fee\u6539 VirtualService \u5b9e\u73b0\uff09\u3002 \u76d1\u63a7\u6307\u6807 KPA \u6839\u636e\u5e76\u53d1\u6570\u8fdb\u884c\u4f38\u7f29\uff0c kpa.autoscaling.knative.dev \u3002 HPA \u6839\u636e\u5236CPU\u8fdb\u884c\u4f38\u7f29\uff0c hpa.autoscaling.knative.dev \uff0c\u76f4\u63a5\u5229\u7528 k8s \u7684HPA\u80fd\u529b\u3002","title":"\u81ea\u52a8\u6269\u7f29\u5bb9"},{"location":"serverless/knative/#service","text":"# helloworld-go.yaml apiVersion : serving.knative.dev/v1 # Current version of Knative kind : Service metadata : name : helloworld-go namespace : default spec : template : metadata : name : helloworld-go-1 spec : containers : - image : gcr.io/knative-samples/helloworld-go env : - name : TARGET value : \"Go Sample v1\" kubectl apply -f helloworld-go.yaml \u4e00\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002 Service | -> Route | -> Configuration -> Revision Revision | -> Deployment / PodAutoscaler | -> ServerlessService Route -> ClusterIngress -> VitualService(istio) Traffic-spitting apiVersion : serving.knative.dev/v1 # Current version of Knative kind : Service metadata : name : helloworld-go namespace : default spec : template : metadata : name : helloworld-go-2 spec : containers : - image : gcr.io/knative-samples/helloworld-go env : - name : TARGET value : \"Go Sample v2\" traffic : - tag : current revisionName : helloworld-go-1 percent : 50 - tag : candidate revisionName : helloworld-go-2 percent : 50 - tag : latest latestRevision : true percent : 0","title":"\u4e00\u4e2a service"},{"location":"serverless/knative/#eventing-core","text":"Knative Eventing is a system that is designed to address a common need for cloud native development and provides composable primitives to enable late-binding event sources and event consumers.","title":"Eventing (Core)"},{"location":"serverless/knative/#eventing","text":"\u53ef\u9760\u7684\u6d88\u606f\u901a\u9053 \u8ba2\u9605\u8f6c\u53d1\u673a\u5236","title":"Eventing \u5b9e\u73b0\u7684\u529f\u80fd"},{"location":"serverless/knative/#eventing_1","text":"Event Source\uff1a\u628a\u65f6\u95f4\u751f\u4ea7\u8005\u63a5\u5165 Knative Eventing \u5e73\u53f0\uff0c\u5e76\u628a\u4e8b\u4ef6\u4f20\u5230\u6d88\u8d39\u8005\u3002 Channel\uff1a \u5b9e\u73b0\u4e8b\u4ef6\u8f6c\u53d1\u548c\u5b58\u50a8\uff0c\u652f\u6301 Kafka \u548c NATS Streaming Subscription\uff1a\u4e8b\u4ef6\u8ba2\u9605\u8005\u3002 Squence: \u4e8b\u4ef6\u4f9d\u6b21\u8f6c\u53d1\u7ed9\u591a\u4e2a\u8ba2\u9605\u8005\u7684\u4e00\u79cd\u673a\u5236 Parallel\uff1a\u4e8b\u4ef6\u540c\u65f6\u8f6c\u53d1\u7ed9\u591a\u4e2a\u8ba2\u9605\u8005\u7684\u4e00\u79cd\u673a\u5236 Broker\uff1a\u63a5\u53d7\u4e8b\u4ef6\uff0c\u5e76\u5c06\u4e8b\u4ef6\u8f6c\u53d1\u5230\u8ba2\u9605\u8005\u3002 Trigger\uff1a\u4e8b\u4ef6\u8ba2\u9605\u3002 Event Registry \u6ce8\u518c\u4e2d\u5fc3\uff0c\u4e8b\u4ef6\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u53ef\u67e5\u770b\u3002 ### Source Knative \u4e2d\u6709\u4e2a\u8d44\u6e90\u53eb EventSource\u3002\u7528\u4e8e\u628a\u4e8b\u4ef6\u751f\u4ea7\u8005\u63a5\u5165 Knative \u4e8b\u4ef6\u5e73\u53f0\u3002 \u4e8b\u4ef6\u751f\u4ea7\u8005\u5728 Knative \u4e8b\u4ef6\u5e73\u53f0\u7684\u62bd\u8c61 Spec \u53c2\u6570 Sink Knative \u4e2d\u5df2\u6709\u7684\u9884\u5b9a\u4e49\u8d44\u6e90\u7c7b\u578b\uff1a APIServerSource GithubSource AwsSource ContainerSource CronJobSource ...","title":"Eventing \u8d44\u6e90"},{"location":"serverless/knative/#sink","text":"Sink \u8868\u793a\u4e8b\u4ef6\u6d88\u606f\u4f20\u9001\u7684\u76ee\u7684\u5730\uff0c\u66b4\u9732\u4e00\u4e2a HTTP \u7aef\u53e3\u3002\u4e0d\u662f\u4e00\u4e2a\u5177\u4f53\u8d44\u6e90\u3002 \u5728 Kubernets\uff0c\u53ea\u8981\u5e26\u7740\u5c5e\u6027\uff1astatus.address.hostname \u7684\u90fd\u53ef\u4ee5\u770b\u4f5c sink\u3002 \u4e24\u79cd\u7c7b\u578b\uff1a Addressable: \u66b4\u9732\u4e00\u4e2aHTTP \u7aef\u53e3\uff0c\u63a5\u53d7\u6d88\u606f\uff0c\u8fd4\u56de\u6210\u529f\u6216\u5931\u8d25\u3002 Callable: \u66b4\u9732\u4e00\u4e2aHTTP \u7aef\u53e3\uff0c\u63a5\u53d7\u6d88\u606f\uff0c\u8fd4\u56de 0 \u5230 1 \u4e2a\u65b0\u4e8b\u4ef6\u3002 Knative \u4e2d\u7684 Sink \u7c7b\u578b\u7684\u8d44\u6e90\uff1a Service, Channel, Broker, Parallel \u53ca Sequence","title":"Sink"},{"location":"serverless/knative/#eventing-models","text":"","title":"Eventing Models"},{"location":"serverless/knative/#_4","text":"Simple Dlivery \u7b80\u5355\u6295\u9012 \u5b9a\u4e49\u4e8b\u4ef6\u6e90 \u901a\u8fc7 Sink \u6307\u5b9a\u6d88\u8d39\u8005\u5730\u5740 # event-source.yaml apiVersion: sources.knative.dev/v1alpha2 kind: CronJobSource metadata: name: test-heartbeats spec: template: spec: containers: - image: <heartbeats_image_uri> name: heartbeats args: - --period=1 env: - name: POD_NAME value: \"mypod\" - name: POD_NAMESPACE value: \"event-test\" sink: ref: apiVersion: serving.knative.dev/v1 kind: Service name: event-display","title":"\u6a21\u578b\u4e00"},{"location":"serverless/knative/#_5","text":"Channel & Subscription \u901a\u9053\u4e0e\u8ba2\u9605 \u901a\u9053 Channel, \u4ee3\u8868\u4e8b\u4ef6\u7684\u8f6c\u53d1\u548c\u6301\u4e45\u5316\u3002 \u8ba2\u9605\u63cf\u8ff0\u901a\u9053\u4e0e\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e5f\u80fd\u8fde\u63a5\u6d88\u8d39\u8005\u4e0e\u7b2c\u4e8c\u4e2a\u901a\u9053\uff0c\u7528\u4e8e\u5904\u7406\u6d88\u8d39\u8005\u8fd4\u56de\u7684\u4e8b\u4ef6\u3002 \u8ba2\u9605 Subscription\uff0c\u652f\u6301\u4e0d\u540c\u6280\u672f\u7684\u901a\u9053\uff0c\u5982 Kafka, NATS Streaming \u7b49\u3002 \u901a\u9053\u4e0e\u8ba2\u9605\uff0c\u4e00\u5bf9\u591a\u3002 # channel.yaml apiVersion: messaging.knative.dev/v1alpha1 kind: Channel metadata: name: my-channel # event-source.yaml ... spec: ... sink: apiVersion: messaging.knative.dev/v1 Kind: Channel name: my-channel # subscription.yaml apiVersion: eventing.knative.dev/v1alpha2 kind: Subscription metadata: name: test-subscription spec: channel: apiVersion: messaging.knative.dev/v1 kind: Channel name: my-channel subscriber: apiVersion: serving.knative.dev/v1 kind: Service name: event-display","title":"\u6a21\u578b\u4e8c"},{"location":"serverless/knative/#_6","text":"Sequence \u5e8f\u5217 Sequence \u5b9a\u4e49\u4e00\u7cfb\u5217\u4f9d\u6b21\u6267\u884c\u4e8b\u4ef6 \u4e8b\u4ef6\u53d1\u9001\u7ed9\u670d\u52a1 \u670d\u52a1\u53ef\u4ee5\u4fee\u6539 or \u521b\u5efa\u65b0\u7684\u4e8b\u4ef6 # event-source.yaml ... spec: ... sink: apiVersion: messaging.knative.dev/v1 Kind: Sequence name: my-sequence # sequence.yaml apiVersion: eventing.knative.dev/v1alpha2 kind: Sequence metadata: name: my-sequence spec: steps: - ref: apiVersion: serving.knative.dev/v1 kind: Service name: step-1 - ref: apiVersion: serving.knative.dev/v1 kind: Service name: step-2 - ref: apiVersion: serving.knative.dev/v1 kind: Service name: step-3","title":"\u6a21\u578b\u4e09"},{"location":"serverless/knative/#_7","text":"Parallel \u5e76\u5217 Parallel \u5b9a\u4e49\u4e00\u7cfb\u5217\u5e76\u884c\u4e8b\u4ef6 \u6bcf\u4e2a\u670d\u52a1\u63a5\u53d7\u5230\u540c\u4e00\u4e8b\u4ef6 \u6bcf\u4e2a\u5206\u652f\u5b9a\u4e49 filter # event-source.yaml ... spec : ... sink : apiVersion : messaging.knative.dev/v1 Kind : Parallel name : my-parallel # parallel.yaml apiVersion : eventing.knative.dev/v1alpha2 kind : Parallel metadata : name : my-parallel spec : branches : - filter ref : apiVersion : serving.knative.dev/v1 kind : Service name : filter-1 subscriber : ref : apiVersion : serving.knative.dev/v1 kind : Service name : mysevice-1 - filter ref : apiVersion : serving.knative.dev/v1 kind : Service name : filter-2 subscriber : ref : apiVersion : serving.knative.dev/v1 kind : Service name : mysevice-2","title":"\u6a21\u578b\u56db"},{"location":"serverless/knative/#_8","text":"Tigger & Broker \u9ed1\u76d2\u6a21\u578b \u642d\u5efa\u9ed1\u76d2\uff0c\u9690\u85cf\u5177\u4f53\u5b9e\u73b0\uff0c\u7528\u6237\u4e0d\u5173\u5fc3 Broker \u4e8b\u4ef6\u6876\uff0c\u63a5\u5165\u5404\u79cd\u4e8b\u4ef6\uff0c\u4e8b\u4ef6\u5177\u6709\u5404\u79cd\u5c5e\u6027\u7528\u6765\u533a\u5206 Tigger \u8fc7\u6ee4\u5668\uff0c\u53ea\u6709\u901a\u8fc7\u8fc7\u6ee4\u5668\u7684\u6761\u4ef6\u624d\u80fd\u4f20\u7ed9\u6d88\u8d39\u8005 # Broker: knative \u81ea\u5df1\u5b9e\u73b0\uff0c\u5b89\u88c5\u5373\u53ef\u3002 broker-filter broker-ingress # Trigger.yaml apiVersion : eventing.knative.dev/v1beta1 kind : Trigger metadata : name : my-trigger spec : filter : attributes : type : dev.knative.sources.ping subscriber : ref : apiVersion : serving.knative.dev/v1beta1 kind : Service name : event-display","title":"\u6a21\u578b\u4e94"},{"location":"serverless/knative/#observability","text":"Logging: ELK Monitoring: Promethus & Grafana Tracing: Jaeger/Zipkin","title":"Observability"},{"location":"serverless/knative/#build","text":"","title":"Build"},{"location":"serverless/knative/#tekton-pipeline-core","text":"pipeline-controller Pipeline-webhook","title":"Tekton Pipeline Core"},{"location":"serverless/knative/#tekton-pipeline-crds","text":"Tekton \u4e3a Kubernetes \u63d0\u4f9b\u4e86\u591a\u79cd CRD \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u5b9a\u4e49\u6211\u4eec\u7684\u6d41\u6c34\u7ebf\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a Task\uff1a\u5b9a\u4e49\u4e86\u4e00\u7ec4\u6784\u5efa\u6b65\u9aa4\uff0c\u5982\u7f16\u8bd1\u4ee3\u7801\u3001\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u53ca\u6784\u5efa\u548c\u90e8\u7f72\u955c\u50cf\u3002\u8868\u793a\u6267\u884c\u547d\u4ee4\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\uff0ctask \u91cc\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684 steps\uff0c\u4f8b\u5982\u7f16\u8bd1\u4ee3\u7801\u3001\u6784\u5efa\u955c\u50cf\u3001\u63a8\u9001\u955c\u50cf\u7b49\uff0c\u6bcf\u4e2a step \u5b9e\u9645\u7531\u4e00\u4e2a Pod \u6267\u884c\u3002 TaskRun\uff1atask \u53ea\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6a21\u7248\uff0ctaskRun \u624d\u771f\u6b63\u4ee3\u8868\u4e86\u4e00\u6b21\u5b9e\u9645\u7684\u8fd0\u884c\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u521b\u5efa\u4e00\u4e2a taskRun\uff0ctaskRun \u521b\u5efa\u51fa\u6765\u4e4b\u540e\uff0c\u5c31\u4f1a\u81ea\u52a8\u89e6\u53d1 task \u63cf\u8ff0\u7684\u6784\u5efa\u4efb\u52a1\u3002 Pipeline\uff1a\u5b9a\u4e49\u4e86\u6784\u6210\u6d41\u6c34\u7ebf\u7684 Tasks \u3002\u4e00\u7ec4\u4efb\u52a1\uff0c\u8868\u793a\u4e00\u4e2a\u6216\u591a\u4e2a task\u3001PipelineResource \u4ee5\u53ca\u5404\u79cd\u5b9a\u4e49\u53c2\u6570\u7684\u96c6\u5408\u3002 PipelineRun\uff1a\u5b9a\u4e49\u4e86\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u3002\u5b83\u5f15\u7528\u8981\u8fd0\u884c\u7684 Pipeline \u4ee5\u53ca\u8981\u7528\u4f5c\u8f93\u5165\u548c\u8f93\u51fa\u7684 PipelineResources \u3002\u7c7b\u4f3c task \u548c taskRun \u7684\u5173\u7cfb\uff0cpipelineRun \u4e5f\u8868\u793a\u67d0\u4e00\u6b21\u5b9e\u9645\u8fd0\u884c\u7684 pipeline\uff0c\u4e0b\u53d1\u4e00\u4e2a pipelineRun CRD \u5b9e\u4f8b\u5230 Kubernetes\u540e\uff0c\u540c\u6837\u4e5f\u4f1a\u89e6\u53d1\u4e00\u6b21 pipeline \u7684\u6784\u5efa\u3002 PipelineResource\uff1a\u6d41\u6c34\u7ebf\u7684\u8f93\u5165\uff08\u4f8b\u5982 git \u5b58\u50a8\u5e93\uff09\u6216\u8f93\u51fa\uff08\u4f8b\u5982 docker \u955c\u50cf\uff09\u3002\u8868\u793a pipeline \u8f93\u5165\u8d44\u6e90\uff0c\u6bd4\u5982 github \u4e0a\u7684\u6e90\u7801\uff0c\u6216\u8005 pipeline \u8f93\u51fa\u8d44\u6e90\uff0c\u4f8b\u5982\u4e00\u4e2a\u5bb9\u5668\u955c\u50cf\u6216\u8005\u6784\u5efa\u751f\u6210\u7684 jar \u5305\u7b49\u3002","title":"Tekton Pipeline CRDs"},{"location":"serverless/knative/#pipeline","text":"","title":"\u4e00\u4e2a Pipeline \u6d41\u7a0b"},{"location":"serverless/knative/#devops","text":"","title":"DevOps"},{"location":"serverless/knative/#_9","text":"Cloud Native/Serverless/Faas \u6982\u5ff5 Stack: Kubernetes, Istio, microservices, logging/monitoring/tracing, OpenFaas \u548c Knative","title":"\u603b\u7ed3"},{"location":"serverless/openfaas/","text":"\u76ee\u5f55 \u00b6 OpenFaaS Stack HightLights OpenFaaS Architecture \u793a\u4f8b\u6f14\u793a \u57fa\u7840\u7ec4\u4ef6 Gateway Provider Watchdog Queue-Worker & NATS Promethus & AlertManager & Faas-idler Gateway \u6e90\u7801\u5206\u6790 Provider \u6e90\u7801\u5206\u6790 Watchdog \u6e90\u7801\u5206\u6790 \u603b\u7ed3 Landscape 2.0 \u6b63\u6587 \u00b6 OpenFaaS Stack \u00b6 HightLights \u00b6 UI \u652f\u6301 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00 Faas-cli\uff0c\u4e30\u5bcc\u7684 CLI \u547d\u4ee4 YAML \u914d\u7f6e \u6309\u9700\u81ea\u52a8\u4f38\u7f29 \u51fd\u6570\u5546\u5e97 \u53e6\u5916\uff1a\u652f\u6301 CRD \u5982\u4eca\u770b\u6765\uff0c\u8fd9\u4e9b hightlights \u5176\u5b9e\u662f serverless \u6846\u67b6\u7684\u6807\u914d\u3002\u4f46\u5176\u67b6\u6784\uff0c\u4e5f\u503c\u5f97\u7814\u7a76\u3002 OpenFaaS Architecture \u00b6 \u793a\u4f8b\u6f14\u793a \u00b6 Hello-world. \u770b\u4e00\u4e0b templates \u91cc\u7684 Dockerfile \u57fa\u7840\u7ec4\u4ef6 \u00b6 Gateway \u00b6 \u4e3a\u51fd\u6570\u8c03\u7528\u63d0\u4f9b\u8def\u7531\uff0c\u8d77\u5230\u4e00\u4e2a\u57fa\u7840\u8f6c\u53d1\u7684\u529f\u80fd Promethus \u6536\u96c6\u76d1\u63a7\u6307\u6807 \u63a5\u53d7AlterManager\u901a\u77e5\uff0c\u81ea\u52a8\u6269\u7f29\u5bb9 \u5185\u7f6e UI \u754c\u9762 \u56fe\u4e2d\uff0c \u7528\u6237\u901a\u8fc7 faas-cli \u3001UI \u6216 REST API \u8bf7\u6c42\u8bbf\u95ee Gateway\u7f51\u5173; /function/ \u8bf7\u6c42\u4f1a\u88ab\u8f6c\u53d1\u5230 Provider\uff0cProvider \u8c03\u7528\u51fd\u6570\uff08\u901a\u8fc7Watchdog\u8c03\u7528 forked process\uff09\uff1b Prometheus \u901a\u8fc7 /metrics \u6536\u96c6\u76d1\u63a7\u6570\u636e\uff1b AlertManager \u6839\u636e\u8bbe\u7f6e\u7684\u62a5\u8b66\u89c4\u5219\uff0c\u901a\u77e5 Gateway /system/alert \u81ea\u52a8\u6269\u7f29\u5bb9\u3002 Provider \u00b6 \u63d0\u4f9b\u51fd\u6570\u7684 CRUD API \u80fd\u529b \u63d0\u4f9b\u51fd\u6570\u7684 invoke \u80fd\u529b \u8bbe\u7f6e/\u83b7\u53d6\u51fd\u6570\u526f\u672c\u6570 Watchdog \u00b6 \u96c6\u6210\u5230\u6bcf\u4e2a\u5bb9\u5668\uff0cresponsible for starting and monitoring functions in OpenFaaS. Classic Watchdog\uff0c\u5982\u4e0b\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1afork\u4e00\u4e2a\u51fd\u6570\u8fdb\u7a0b\u6267\u884c\u3002 \u65b0\u7684 of-watchdog \u9879\u76ee\uff0c\u6027\u80fd\u66f4\u9ad8\uff0c\u9ed8\u8ba4http\u3002 \u6709\u70b9\u50cf\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u6982\u5ff5\uff0cThe primary difference is the ability to keep the function process warm between invocations\u3002ame process can be re-used repeatedly to offset the latency of forking. Queue-Worker & NATS \u00b6 Queue-worker \u7ec4\u4ef6\u63d0\u4f9b\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u7528\u4e8e \u5f02\u6b65 \u5730\u5904\u7406\u4e8b\u4ef6\u3002 nats\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\uff0c\u4e91\u539f\u751f\u7684\u6d88\u606f\u7cfb\u7edf\u3002\u4f7f\u7a0b\u5e8f\u53ef\u4ee5\u8f7b\u677e\u5730\u8de8\u4e0d\u540c\u73af\u5883\uff0c\u8bed\u8a00\uff0c\u4e91\u63d0\u4f9b\u5546\u548c\u5185\u90e8\u90e8\u7f72\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1\u3002 Promethus & AlertManager & Faas-idler \u00b6 Promethus \u6536\u96c6\u76d1\u63a7\u6307\u6807\uff1b \u63a5\u53d7AlterManager\u901a\u77e5\uff0c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002 Faas-idler\uff1a \u76d1\u63a7Prometheus \u6307\u6807\uff0c\u51b3\u5b9a\u662f\u5426\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u88ab scaled to zero. Gateway \u6e90\u7801\u5206\u6790 \u00b6 https://github.com/openfaas/faas https://github.com/openfaas/nats-queue-worker gateway/main.go ReadConfig (\u8bfb\u53d6\u73af\u5883\u914d\u7f6e\u4fe1\u606f) BasicAuthCredentials (\u57fa\u672c\u7684\u8eab\u4efd\u8ba4\u8bc1) MakeForwardingProxyHandler (\u548c\u51fd\u6570\u76f8\u5173\u7684\u4ee3\u7406\u8f6c\u53d1\uff0cnet/http\u4e0a\u62bd\u8c61\u4e86\u4e00\u5c42) List: faasHandlers.ListFunctions Deploy: faasHandlers.DeployFunction Delete: faasHandlers.DeleteFunction Update: faasHandlers.UpdateFunction Query: faasHandlers.QueryFunction Info\uff1afaasHandlers.InfoHandler Secret\uff1afaasHandlers.SecretHandler Namespace: faasHandlers.NamespaceListerHandler if ScaleFromZero : NewFunctionCache \uff08\u53c2\u8003 zero-scale \uff09 If UseNATS : CreateNATSQueue (\u5f02\u6b65\u51fd\u6570\u542f\u7528NATS\uff0c\u6d88\u606f\u53d1\u5e03\u8005\u89d2\u8272) NewPrometheusQuery\uff08\u8bbe\u7f6ePrometheus\u76d1\u63a7\uff09 Scale\uff1afaasHandlers.ScaleFunction\uff08\u8bbe\u7f6e\u81ea\u52a8\u6269\u7f29\u5bb9\uff09 mux.NewRouter()\uff08\u6ce8\u518c\u5404\u79cd\u8def\u7531\uff09 go runMetricsServer()\uff08\u542f\u52a8Prometheus\u6307\u6807\u6536\u96c6\uff09 &http.Server{} => ListenAndServe \uff08\u542f\u52a8\u670d\u52a1\uff09 \u53ef\u89c1\uff0cGateway \u662f OpenFaaS \u6700\u4e3a\u91cd\u8981\u7684\u4e00\u4e2a\u7ec4\u4ef6\u3002\u6574\u4e2a\u9879\u76ee\u7684\u57fa\u672c\u8109\u7edc\u90fd\u5728\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d\uff0c\u4e3b\u8981\u5c31\u662f\u4ee3\u7406\u8f6c\u53d1\u3002 Provider \u6e90\u7801\u5206\u6790 \u00b6 https://github.com/openfaas/faas-provider serve.go r = mux.NewRouter() \uff08\u6ce8\u518c\u5404\u79cd\u8def\u7531\uff09 Serve if EnableBasicAuth: handlers.FunctionReader = auth.DecorateWithBasicAuth (\u9274\u6743) r.HandleFunc(\"/system/***\") (\u5904\u7406 HTTP \u8bf7\u6c42\u7b49\u8def\u7531) r.HandleFunc(\"/function/***\") r.HandleFunc(\"/healthz/***\") ListenAndServe() types/serve.go type FaaSHandlers struct { // FunctionProxy provides the function invocation proxy logic. Use proxy.NewHandlerFunc to // use the standard OpenFaaS proxy implementation or provide completely custom proxy logic. FunctionProxy http.HandlerFunc FunctionReader http.HandlerFunc DeployHandler http.HandlerFunc DeleteHandler http.HandlerFunc ReplicaReader http.HandlerFunc ReplicaUpdater http.HandlerFunc SecretHandler http.HandlerFunc // LogHandler provides streaming json logs of functions LogHandler http.HandlerFunc // UpdateHandler an existing function/service UpdateHandler http.HandlerFunc // HealthHandler defines the default health endpoint bound to \"/healthz // If the handler is not set, then the \"/healthz\" path will not be configured HealthHandler http.HandlerFunc InfoHandler http.HandlerFunc ListNamespaceHandler http.HandlerFunc } \u58f0\u660e\u5404\u79cd handler \u7684\u63a5\u53e3\uff0c\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u5e73\u53f0\uff08kubernetes or DockerSwarm\uff09\u90fd\u5177\u5907\u4e86FaaS Provider \u7684\u80fd\u529b\u3002 proxy/proxy.go // proxyRequest \u5904\u7406\u8c03\u7528\u51fd\u6570\u670d\u52a1\u7684\u5b9e\u9645\u8bf7\u6c42 func proxyRequest(...) { ... proxyReq = buildProxyRequest(originalReq, functionAddr, pathVars[\"params\"]) } // \u62fc\u88c5 Watchdog \u7684 Url\uff0c\u5e76\u4ee3\u7406\u8fc7\u53bb func buildProxyRequest(...) { f baseURL.Port() == \"\" { host = baseURL.Host + \":\" + watchdogPort } url := url.URL{ Scheme: baseURL.Scheme, Host: host, Path: extraPath, RawQuery: originalReq.URL.RawQuery, } upstreamReq, err := http.NewRequest(originalReq.Method, url.String(), nil) if err != nil { return nil, err } ... return upstreamReq } https://github.com/openfaas/faas-netes main.go main() { if !operator { runController(kubeconfig, masterURL) // \u8fd0\u884c k8s \u7684\u6838\u5fc3\u63a7\u5236\u5668 } else { runOperator(kubeconfig, masterURL) // \u64cd\u4f5c k8s \u7684CRD \u8d44\u6e90\uff0c\u65b0\u589e\u80fd\u529b } } // masterURL\uff1a address of the Kubernetes API server // operator\uff1aUse the operator mode instead of faas-netes The faas-netes controller for OpenFaaS is the most mature, well tested and supported. You may also use the OpenFaaS Operator if you would like to use a Function CRD. If you are not sure which to use, then use faas-netes. See also: faas-netes , openfaas-operator . func runController(kubeconfig, masterURL string) { // 1. k8s namespace functionNamespace := \"default\" // 2. \u83b7\u53d6 k8s, \u63a2\u9488\uff0c\u955c\u50cf\u62c9\u53d6\u7b56\u7565\u7b49\u914d\u7f6e\u4fe1\u606f deployConfig := k8s.DeploymentConfig{} // 3. k8s \u5ba2\u6237\u7aef factory := k8s.NewFunctionFactory(clientset, deployConfig) // 4. \u6838\u5fc3\uff1a k8s \u64cd\u4f5c\u53e5\u67c4 bootstrapHandlers := providertypes.FaaSHandlers{ FunctionProxy: proxy.NewHandlerFunc(cfg.FaaSConfig, functionLookup), DeleteHandler: handlers.MakeDeleteHandler(functionNamespace, clientset), DeployHandler: handlers.MakeDeployHandler(functionNamespace, factory), FunctionReader: handlers.MakeFunctionReader(functionNamespace, clientset), ReplicaReader: handlers.MakeReplicaReader(functionNamespace, clientset), ReplicaUpdater: handlers.MakeReplicaUpdater(functionNamespace, clientset), UpdateHandler: handlers.MakeUpdateHandler(functionNamespace, factory), HealthHandler: handlers.MakeHealthHandler(), InfoHandler: handlers.MakeInfoHandler(version.BuildVersion(), version.GitCommit), SecretHandler: handlers.MakeSecretHandler(functionNamespace, clientset), LogHandler: logs.NewLogHandlerFunc(k8s.NewLogRequestor(clientset, functionNamespace), cfg.FaaSConfig.WriteTimeout), ListNamespaceHandler: handlers.MakeNamespacesLister(functionNamespace, clientset), } // 5. \u8fd0\u884c\u670d\u52a1\u5668 faasProvider.Serve(&bootstrapHandlers, &cfg.FaaSConfig) } handlers/delete.go // \u8fd4\u56de delete handler func MakeDeleteHandler() { return func{ // ... deployment, findDeployErr := clientset.AppsV1(). Deployments(lookupNamespace). Get(request.FunctionName, getOpts) if isFunction(deployment) { err := deleteFunction(lookupNamespace, clientset, request, w) } // ... } } // \u6267\u884c\u5220\u9664 func deleteFunction(..., clientset *kubernetes.Clientset, ...) { // \u5220\u9664 deploy clientset.AppsV1().Deployments(functionNamespace). Delete(request.FunctionName, opts) // \u5220\u9664 service clientset.CoreV1(). Services(functionNamespace). Delete(request.FunctionName, opts); } handles/replica.go // \u8c03\u7528 Kubernetes API \u8fdb\u884c\u7684\u6269\u7f29\u5bb9\uff0c\u4ee3\u7801\u90fd\u5dee\u4e0d\u591a\uff0c\u4e0d\u518d\u8d58\u8ff0 \u56e0\u6b64\uff0cprovider \u505a\u4e86\u4e24\u4ef6\u4e8b\uff0c \u4ee3\u7406\u8f6c\u53d1\u8bf7\u6c42\u5230 watchdog \u64cd\u4f5c Kubernetes Watchdog \u6e90\u7801\u5206\u6790 \u00b6 https://github.com/openfaas/faas watchdog/main.go func main() { // 1. \u8bfb\u53d6\u914d\u7f6e readConfig := ReadConfig{} config := readConfig.Read(osEnv) // 2. \u5904\u7406\u8bf7\u6c42 http.HandleFunc(\"/_/health\", makeHealthHandler()) // \u6838\u5fc3 makeRequestHandler http.HandleFunc(\"/\", metrics.InstrumentHandler(makeRequestHandler(&config), httpMetrics)) // 3. Promethus \u670d\u52a1 go metricsServer.Serve(cancel) // 4. \u51fd\u6570\u670d\u52a1 listenUntilShutdown(shutdownTimeout, s, config.suppressLock) } // listen for HTTP \u76f4\u5230\u542c\u5230\u4fe1\u53f7 SIGTERM \u4e14\u7b49\u5f85\u8d85\u65f6\u540e func listenUntilShutdown() { // Run the HTTP server in a separate go-routine. go func() { if err := s.ListenAndServe(); err != http.ErrServerClosed { log.Printf(\"Error ListenAndServe: %v\", err) close(idleConnsClosed) } }() } watchdog/handler.go // \u5904\u7406 Http \u8bf7\u6c42 func makeRequestHandler(config *WatchdogConfig) http.HandlerFunc { switch r.Method { case http.MethodPost, http.MethodPut, http.MethodPatch, http.MethodDelete, http.MethodGet: pipeRequest(config, w, r, r.Method) break } } // \u6838\u5fc3\uff1apipeRequest // \u4e3a\u6bcf\u4e2a\u8bf7\u6c42 Fork \u4e00\u4e2a fprocess func pipeRequest() { // ... parts := strings.Split(config.faasProcess, \" \") // faasProcess: \"node index.js\" // ... targetCmd := exec.Command(parts[0], parts[1:]...) // \u6267\u884c\u51fd\u6570 // ... requestBody, buildInputErr = buildFunctionInput(config, r) // ... } // \u683c\u5f0f\u5316\u8f93\u5165 buildFunctionInput(config *WatchdogConfig, r *http.Request) { //... return res, err } watchdog/readconfig.go func (ReadConfig) Read(hasEnv HasEnv) WatchdogConfig { // ... cfg.faasProcess = hasEnv.Getenv(\"fprocess\") // ... } \u603b\u7ed3 \u00b6 \u901a\u8fc7 faas-cli \u5982\u4f55\u7ef4\u62a4\u4e00\u4e2a Serveless \u5e94\u7528 \u770b Templetes \u7684 Dockerfile \u77e5\u9053\u8fd9\u4e2a\u955c\u50cf\u662f\u600e\u4e48\u6784\u5efa \u8bfb\u6e90\u7801\u77e5\u9053 openFaas \u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u5982\u4f55\u4f7f\u7528 kubernets \u7684\u80fd\u529b \u6b64\u5916\uff0c\u8bfb\u5185\u7f6eUI \u6e90\u7801\u53ef\u5b9a\u5236\u5316\u53ca\u5f00\u53d1\u516c\u53f8UI\u53ca\u5185\u90e8\u5546\u5e97\u7b49\u3002 ... Landscape 2.0 \u00b6","title":"Openfaas"},{"location":"serverless/openfaas/#_1","text":"OpenFaaS Stack HightLights OpenFaaS Architecture \u793a\u4f8b\u6f14\u793a \u57fa\u7840\u7ec4\u4ef6 Gateway Provider Watchdog Queue-Worker & NATS Promethus & AlertManager & Faas-idler Gateway \u6e90\u7801\u5206\u6790 Provider \u6e90\u7801\u5206\u6790 Watchdog \u6e90\u7801\u5206\u6790 \u603b\u7ed3 Landscape 2.0","title":"\u76ee\u5f55"},{"location":"serverless/openfaas/#_2","text":"","title":"\u6b63\u6587"},{"location":"serverless/openfaas/#openfaas-stack","text":"","title":"OpenFaaS Stack"},{"location":"serverless/openfaas/#hightlights","text":"UI \u652f\u6301 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00 Faas-cli\uff0c\u4e30\u5bcc\u7684 CLI \u547d\u4ee4 YAML \u914d\u7f6e \u6309\u9700\u81ea\u52a8\u4f38\u7f29 \u51fd\u6570\u5546\u5e97 \u53e6\u5916\uff1a\u652f\u6301 CRD \u5982\u4eca\u770b\u6765\uff0c\u8fd9\u4e9b hightlights \u5176\u5b9e\u662f serverless \u6846\u67b6\u7684\u6807\u914d\u3002\u4f46\u5176\u67b6\u6784\uff0c\u4e5f\u503c\u5f97\u7814\u7a76\u3002","title":"HightLights"},{"location":"serverless/openfaas/#openfaas-architecture","text":"","title":"OpenFaaS Architecture"},{"location":"serverless/openfaas/#_3","text":"Hello-world. \u770b\u4e00\u4e0b templates \u91cc\u7684 Dockerfile","title":"\u793a\u4f8b\u6f14\u793a"},{"location":"serverless/openfaas/#_4","text":"","title":"\u57fa\u7840\u7ec4\u4ef6"},{"location":"serverless/openfaas/#gateway","text":"\u4e3a\u51fd\u6570\u8c03\u7528\u63d0\u4f9b\u8def\u7531\uff0c\u8d77\u5230\u4e00\u4e2a\u57fa\u7840\u8f6c\u53d1\u7684\u529f\u80fd Promethus \u6536\u96c6\u76d1\u63a7\u6307\u6807 \u63a5\u53d7AlterManager\u901a\u77e5\uff0c\u81ea\u52a8\u6269\u7f29\u5bb9 \u5185\u7f6e UI \u754c\u9762 \u56fe\u4e2d\uff0c \u7528\u6237\u901a\u8fc7 faas-cli \u3001UI \u6216 REST API \u8bf7\u6c42\u8bbf\u95ee Gateway\u7f51\u5173; /function/ \u8bf7\u6c42\u4f1a\u88ab\u8f6c\u53d1\u5230 Provider\uff0cProvider \u8c03\u7528\u51fd\u6570\uff08\u901a\u8fc7Watchdog\u8c03\u7528 forked process\uff09\uff1b Prometheus \u901a\u8fc7 /metrics \u6536\u96c6\u76d1\u63a7\u6570\u636e\uff1b AlertManager \u6839\u636e\u8bbe\u7f6e\u7684\u62a5\u8b66\u89c4\u5219\uff0c\u901a\u77e5 Gateway /system/alert \u81ea\u52a8\u6269\u7f29\u5bb9\u3002","title":"Gateway"},{"location":"serverless/openfaas/#provider","text":"\u63d0\u4f9b\u51fd\u6570\u7684 CRUD API \u80fd\u529b \u63d0\u4f9b\u51fd\u6570\u7684 invoke \u80fd\u529b \u8bbe\u7f6e/\u83b7\u53d6\u51fd\u6570\u526f\u672c\u6570","title":"Provider"},{"location":"serverless/openfaas/#watchdog","text":"\u96c6\u6210\u5230\u6bcf\u4e2a\u5bb9\u5668\uff0cresponsible for starting and monitoring functions in OpenFaaS. Classic Watchdog\uff0c\u5982\u4e0b\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1afork\u4e00\u4e2a\u51fd\u6570\u8fdb\u7a0b\u6267\u884c\u3002 \u65b0\u7684 of-watchdog \u9879\u76ee\uff0c\u6027\u80fd\u66f4\u9ad8\uff0c\u9ed8\u8ba4http\u3002 \u6709\u70b9\u50cf\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u6982\u5ff5\uff0cThe primary difference is the ability to keep the function process warm between invocations\u3002ame process can be re-used repeatedly to offset the latency of forking.","title":"Watchdog"},{"location":"serverless/openfaas/#queue-worker-nats","text":"Queue-worker \u7ec4\u4ef6\u63d0\u4f9b\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u7528\u4e8e \u5f02\u6b65 \u5730\u5904\u7406\u4e8b\u4ef6\u3002 nats\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\uff0c\u4e91\u539f\u751f\u7684\u6d88\u606f\u7cfb\u7edf\u3002\u4f7f\u7a0b\u5e8f\u53ef\u4ee5\u8f7b\u677e\u5730\u8de8\u4e0d\u540c\u73af\u5883\uff0c\u8bed\u8a00\uff0c\u4e91\u63d0\u4f9b\u5546\u548c\u5185\u90e8\u90e8\u7f72\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1\u3002","title":"Queue-Worker &amp; NATS"},{"location":"serverless/openfaas/#promethus-alertmanager-faas-idler","text":"Promethus \u6536\u96c6\u76d1\u63a7\u6307\u6807\uff1b \u63a5\u53d7AlterManager\u901a\u77e5\uff0c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002 Faas-idler\uff1a \u76d1\u63a7Prometheus \u6307\u6807\uff0c\u51b3\u5b9a\u662f\u5426\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u88ab scaled to zero.","title":"Promethus &amp; AlertManager &amp; Faas-idler"},{"location":"serverless/openfaas/#gateway_1","text":"https://github.com/openfaas/faas https://github.com/openfaas/nats-queue-worker gateway/main.go ReadConfig (\u8bfb\u53d6\u73af\u5883\u914d\u7f6e\u4fe1\u606f) BasicAuthCredentials (\u57fa\u672c\u7684\u8eab\u4efd\u8ba4\u8bc1) MakeForwardingProxyHandler (\u548c\u51fd\u6570\u76f8\u5173\u7684\u4ee3\u7406\u8f6c\u53d1\uff0cnet/http\u4e0a\u62bd\u8c61\u4e86\u4e00\u5c42) List: faasHandlers.ListFunctions Deploy: faasHandlers.DeployFunction Delete: faasHandlers.DeleteFunction Update: faasHandlers.UpdateFunction Query: faasHandlers.QueryFunction Info\uff1afaasHandlers.InfoHandler Secret\uff1afaasHandlers.SecretHandler Namespace: faasHandlers.NamespaceListerHandler if ScaleFromZero : NewFunctionCache \uff08\u53c2\u8003 zero-scale \uff09 If UseNATS : CreateNATSQueue (\u5f02\u6b65\u51fd\u6570\u542f\u7528NATS\uff0c\u6d88\u606f\u53d1\u5e03\u8005\u89d2\u8272) NewPrometheusQuery\uff08\u8bbe\u7f6ePrometheus\u76d1\u63a7\uff09 Scale\uff1afaasHandlers.ScaleFunction\uff08\u8bbe\u7f6e\u81ea\u52a8\u6269\u7f29\u5bb9\uff09 mux.NewRouter()\uff08\u6ce8\u518c\u5404\u79cd\u8def\u7531\uff09 go runMetricsServer()\uff08\u542f\u52a8Prometheus\u6307\u6807\u6536\u96c6\uff09 &http.Server{} => ListenAndServe \uff08\u542f\u52a8\u670d\u52a1\uff09 \u53ef\u89c1\uff0cGateway \u662f OpenFaaS \u6700\u4e3a\u91cd\u8981\u7684\u4e00\u4e2a\u7ec4\u4ef6\u3002\u6574\u4e2a\u9879\u76ee\u7684\u57fa\u672c\u8109\u7edc\u90fd\u5728\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d\uff0c\u4e3b\u8981\u5c31\u662f\u4ee3\u7406\u8f6c\u53d1\u3002","title":"Gateway \u6e90\u7801\u5206\u6790"},{"location":"serverless/openfaas/#provider_1","text":"https://github.com/openfaas/faas-provider serve.go r = mux.NewRouter() \uff08\u6ce8\u518c\u5404\u79cd\u8def\u7531\uff09 Serve if EnableBasicAuth: handlers.FunctionReader = auth.DecorateWithBasicAuth (\u9274\u6743) r.HandleFunc(\"/system/***\") (\u5904\u7406 HTTP \u8bf7\u6c42\u7b49\u8def\u7531) r.HandleFunc(\"/function/***\") r.HandleFunc(\"/healthz/***\") ListenAndServe() types/serve.go type FaaSHandlers struct { // FunctionProxy provides the function invocation proxy logic. Use proxy.NewHandlerFunc to // use the standard OpenFaaS proxy implementation or provide completely custom proxy logic. FunctionProxy http.HandlerFunc FunctionReader http.HandlerFunc DeployHandler http.HandlerFunc DeleteHandler http.HandlerFunc ReplicaReader http.HandlerFunc ReplicaUpdater http.HandlerFunc SecretHandler http.HandlerFunc // LogHandler provides streaming json logs of functions LogHandler http.HandlerFunc // UpdateHandler an existing function/service UpdateHandler http.HandlerFunc // HealthHandler defines the default health endpoint bound to \"/healthz // If the handler is not set, then the \"/healthz\" path will not be configured HealthHandler http.HandlerFunc InfoHandler http.HandlerFunc ListNamespaceHandler http.HandlerFunc } \u58f0\u660e\u5404\u79cd handler \u7684\u63a5\u53e3\uff0c\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u5e73\u53f0\uff08kubernetes or DockerSwarm\uff09\u90fd\u5177\u5907\u4e86FaaS Provider \u7684\u80fd\u529b\u3002 proxy/proxy.go // proxyRequest \u5904\u7406\u8c03\u7528\u51fd\u6570\u670d\u52a1\u7684\u5b9e\u9645\u8bf7\u6c42 func proxyRequest(...) { ... proxyReq = buildProxyRequest(originalReq, functionAddr, pathVars[\"params\"]) } // \u62fc\u88c5 Watchdog \u7684 Url\uff0c\u5e76\u4ee3\u7406\u8fc7\u53bb func buildProxyRequest(...) { f baseURL.Port() == \"\" { host = baseURL.Host + \":\" + watchdogPort } url := url.URL{ Scheme: baseURL.Scheme, Host: host, Path: extraPath, RawQuery: originalReq.URL.RawQuery, } upstreamReq, err := http.NewRequest(originalReq.Method, url.String(), nil) if err != nil { return nil, err } ... return upstreamReq } https://github.com/openfaas/faas-netes main.go main() { if !operator { runController(kubeconfig, masterURL) // \u8fd0\u884c k8s \u7684\u6838\u5fc3\u63a7\u5236\u5668 } else { runOperator(kubeconfig, masterURL) // \u64cd\u4f5c k8s \u7684CRD \u8d44\u6e90\uff0c\u65b0\u589e\u80fd\u529b } } // masterURL\uff1a address of the Kubernetes API server // operator\uff1aUse the operator mode instead of faas-netes The faas-netes controller for OpenFaaS is the most mature, well tested and supported. You may also use the OpenFaaS Operator if you would like to use a Function CRD. If you are not sure which to use, then use faas-netes. See also: faas-netes , openfaas-operator . func runController(kubeconfig, masterURL string) { // 1. k8s namespace functionNamespace := \"default\" // 2. \u83b7\u53d6 k8s, \u63a2\u9488\uff0c\u955c\u50cf\u62c9\u53d6\u7b56\u7565\u7b49\u914d\u7f6e\u4fe1\u606f deployConfig := k8s.DeploymentConfig{} // 3. k8s \u5ba2\u6237\u7aef factory := k8s.NewFunctionFactory(clientset, deployConfig) // 4. \u6838\u5fc3\uff1a k8s \u64cd\u4f5c\u53e5\u67c4 bootstrapHandlers := providertypes.FaaSHandlers{ FunctionProxy: proxy.NewHandlerFunc(cfg.FaaSConfig, functionLookup), DeleteHandler: handlers.MakeDeleteHandler(functionNamespace, clientset), DeployHandler: handlers.MakeDeployHandler(functionNamespace, factory), FunctionReader: handlers.MakeFunctionReader(functionNamespace, clientset), ReplicaReader: handlers.MakeReplicaReader(functionNamespace, clientset), ReplicaUpdater: handlers.MakeReplicaUpdater(functionNamespace, clientset), UpdateHandler: handlers.MakeUpdateHandler(functionNamespace, factory), HealthHandler: handlers.MakeHealthHandler(), InfoHandler: handlers.MakeInfoHandler(version.BuildVersion(), version.GitCommit), SecretHandler: handlers.MakeSecretHandler(functionNamespace, clientset), LogHandler: logs.NewLogHandlerFunc(k8s.NewLogRequestor(clientset, functionNamespace), cfg.FaaSConfig.WriteTimeout), ListNamespaceHandler: handlers.MakeNamespacesLister(functionNamespace, clientset), } // 5. \u8fd0\u884c\u670d\u52a1\u5668 faasProvider.Serve(&bootstrapHandlers, &cfg.FaaSConfig) } handlers/delete.go // \u8fd4\u56de delete handler func MakeDeleteHandler() { return func{ // ... deployment, findDeployErr := clientset.AppsV1(). Deployments(lookupNamespace). Get(request.FunctionName, getOpts) if isFunction(deployment) { err := deleteFunction(lookupNamespace, clientset, request, w) } // ... } } // \u6267\u884c\u5220\u9664 func deleteFunction(..., clientset *kubernetes.Clientset, ...) { // \u5220\u9664 deploy clientset.AppsV1().Deployments(functionNamespace). Delete(request.FunctionName, opts) // \u5220\u9664 service clientset.CoreV1(). Services(functionNamespace). Delete(request.FunctionName, opts); } handles/replica.go // \u8c03\u7528 Kubernetes API \u8fdb\u884c\u7684\u6269\u7f29\u5bb9\uff0c\u4ee3\u7801\u90fd\u5dee\u4e0d\u591a\uff0c\u4e0d\u518d\u8d58\u8ff0 \u56e0\u6b64\uff0cprovider \u505a\u4e86\u4e24\u4ef6\u4e8b\uff0c \u4ee3\u7406\u8f6c\u53d1\u8bf7\u6c42\u5230 watchdog \u64cd\u4f5c Kubernetes","title":"Provider \u6e90\u7801\u5206\u6790"},{"location":"serverless/openfaas/#watchdog_1","text":"https://github.com/openfaas/faas watchdog/main.go func main() { // 1. \u8bfb\u53d6\u914d\u7f6e readConfig := ReadConfig{} config := readConfig.Read(osEnv) // 2. \u5904\u7406\u8bf7\u6c42 http.HandleFunc(\"/_/health\", makeHealthHandler()) // \u6838\u5fc3 makeRequestHandler http.HandleFunc(\"/\", metrics.InstrumentHandler(makeRequestHandler(&config), httpMetrics)) // 3. Promethus \u670d\u52a1 go metricsServer.Serve(cancel) // 4. \u51fd\u6570\u670d\u52a1 listenUntilShutdown(shutdownTimeout, s, config.suppressLock) } // listen for HTTP \u76f4\u5230\u542c\u5230\u4fe1\u53f7 SIGTERM \u4e14\u7b49\u5f85\u8d85\u65f6\u540e func listenUntilShutdown() { // Run the HTTP server in a separate go-routine. go func() { if err := s.ListenAndServe(); err != http.ErrServerClosed { log.Printf(\"Error ListenAndServe: %v\", err) close(idleConnsClosed) } }() } watchdog/handler.go // \u5904\u7406 Http \u8bf7\u6c42 func makeRequestHandler(config *WatchdogConfig) http.HandlerFunc { switch r.Method { case http.MethodPost, http.MethodPut, http.MethodPatch, http.MethodDelete, http.MethodGet: pipeRequest(config, w, r, r.Method) break } } // \u6838\u5fc3\uff1apipeRequest // \u4e3a\u6bcf\u4e2a\u8bf7\u6c42 Fork \u4e00\u4e2a fprocess func pipeRequest() { // ... parts := strings.Split(config.faasProcess, \" \") // faasProcess: \"node index.js\" // ... targetCmd := exec.Command(parts[0], parts[1:]...) // \u6267\u884c\u51fd\u6570 // ... requestBody, buildInputErr = buildFunctionInput(config, r) // ... } // \u683c\u5f0f\u5316\u8f93\u5165 buildFunctionInput(config *WatchdogConfig, r *http.Request) { //... return res, err } watchdog/readconfig.go func (ReadConfig) Read(hasEnv HasEnv) WatchdogConfig { // ... cfg.faasProcess = hasEnv.Getenv(\"fprocess\") // ... }","title":"Watchdog \u6e90\u7801\u5206\u6790"},{"location":"serverless/openfaas/#_5","text":"\u901a\u8fc7 faas-cli \u5982\u4f55\u7ef4\u62a4\u4e00\u4e2a Serveless \u5e94\u7528 \u770b Templetes \u7684 Dockerfile \u77e5\u9053\u8fd9\u4e2a\u955c\u50cf\u662f\u600e\u4e48\u6784\u5efa \u8bfb\u6e90\u7801\u77e5\u9053 openFaas \u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u5982\u4f55\u4f7f\u7528 kubernets \u7684\u80fd\u529b \u6b64\u5916\uff0c\u8bfb\u5185\u7f6eUI \u6e90\u7801\u53ef\u5b9a\u5236\u5316\u53ca\u5f00\u53d1\u516c\u53f8UI\u53ca\u5185\u90e8\u5546\u5e97\u7b49\u3002 ...","title":"\u603b\u7ed3"},{"location":"serverless/openfaas/#landscape-20","text":"","title":"Landscape 2.0"}]}